//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Common.Model
{
    public enum TaskState
    {
        Open = 0,
        Completed = 1,
        Canceled = 2,
    }

    /// <summary>
    /// Generic activity representing work needed to be done.
    /// </summary>
    public partial class Task : Microsoft.Xrm.Sdk.Samples.Entity, System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Default Constructor.
        /// </summary>
        public Task() : base(EntityLogicalName)
        {
        }

        public const string EntityLogicalName = "task";

        public const int EntityTypeCode = 4212;

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public string ActivityAdditionalParams
        {
            get
            {
                return this.GetAttributeValue<string>("activityadditionalparams");
            }
            set
            {
                this.SetAttributeValue("activityadditionalparams", value);
                this.OnPropertyChanged("ActivityAdditionalParams");
            }
        }

        /// <summary>
        /// Unique identifier of the task.
        /// </summary>
        public System.Nullable<System.Guid> ActivityId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
            }
            set
            {
                this.SetAttributeValue("activityid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
                this.OnPropertyChanged("ActivityId");
            }
        }

        public override System.Guid Id
        {
            get
            {
                return base.Id;
            }
            set
            {
                this.ActivityId = value;
            }
        }

        /// <summary>
        /// Type of activity.
        /// </summary>
        public string ActivityTypeCode
        {
            get
            {
                return this.GetAttributeValue<string>("activitytypecode");
            }
        }

        /// <summary>
        /// Type the number of minutes spent on the task. The duration is used in reporting.
        /// </summary>
        public System.Nullable<int> ActualDurationMinutes
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("actualdurationminutes");
            }
            set
            {
                this.SetAttributeValue("actualdurationminutes", value);
                this.OnPropertyChanged("ActualDurationMinutes");
            }
        }

        /// <summary>
        /// Enter the actual end date and time of the task. By default, it displays when the activity was completed or canceled.
        /// </summary>
        public System.Nullable<System.DateTime> ActualEnd
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualend");
            }
            set
            {
                this.SetAttributeValue("actualend", value);
                this.OnPropertyChanged("ActualEnd");
            }
        }

        /// <summary>
        /// Enter the actual start date and time for the task. By default, it displays when the task was created.
        /// </summary>
        public System.Nullable<System.DateTime> ActualStart
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualstart");
            }
            set
            {
                this.SetAttributeValue("actualstart", value);
                this.OnPropertyChanged("ActualStart");
            }
        }

        /// <summary>
        /// Type a category to identify the task type, such as lead gathering or customer follow up, to tie the task to a business group or function.
        /// </summary>
        public string Category
        {
            get
            {
                return this.GetAttributeValue<string>("category");
            }
            set
            {
                this.SetAttributeValue("category", value);
                this.OnPropertyChanged("Category");
            }
        }

        /// <summary>
        /// Shows who created the record.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        public System.Nullable<System.DateTime> CreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Shows who created the record on behalf of another user.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference CreatedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("createdonbehalfby");
            }
        }

        /// <summary>
        /// Assigned Task Unique Id
        /// </summary>
        public System.Nullable<System.Guid> CrmTaskAssignedUniqueId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("crmtaskassigneduniqueid");
            }
            set
            {
                this.SetAttributeValue("crmtaskassigneduniqueid", value);
                this.OnPropertyChanged("CrmTaskAssignedUniqueId");
            }
        }

        /// <summary>
        /// Type additional information to describe the task.
        /// </summary>
        public string Description
        {
            get
            {
                return this.GetAttributeValue<string>("description");
            }
            set
            {
                this.SetAttributeValue("description", value);
                this.OnPropertyChanged("Description");
            }
        }

        /// <summary>
        /// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
        /// </summary>
        public System.Nullable<decimal> ExchangeRate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Unique identifier of the data import or data migration that created this record.
        /// </summary>
        public System.Nullable<int> ImportSequenceNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
                this.OnPropertyChanged("ImportSequenceNumber");
            }
        }

        /// <summary>
        /// Information which specifies whether the task was billed as part of resolving a case.
        /// </summary>
        public System.Nullable<bool> IsBilled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
            }
            set
            {
                this.SetAttributeValue("isbilled", value);
                this.OnPropertyChanged("IsBilled");
            }
        }

        /// <summary>
        /// Information regarding whether the activity is a regular activity type or event type.
        /// </summary>
        public System.Nullable<bool> IsRegularActivity
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
            }
        }

        /// <summary>
        /// Information which specifies if the task was created from a workflow rule.
        /// </summary>
        public System.Nullable<bool> IsWorkflowCreated
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
            }
            set
            {
                this.SetAttributeValue("isworkflowcreated", value);
                this.OnPropertyChanged("IsWorkflowCreated");
            }
        }

        /// <summary>
        /// Contains the date and time stamp of the last on hold time.
        /// </summary>
        public System.Nullable<System.DateTime> LastOnHoldTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
            }
            set
            {
                this.SetAttributeValue("lastonholdtime", value);
                this.OnPropertyChanged("LastOnHoldTime");
            }
        }

        /// <summary>
        /// Shows who last updated the record.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        public System.Nullable<System.DateTime> ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Shows who last updated the record on behalf of another user.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference ModifiedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("modifiedonbehalfby");
            }
        }

        /// <summary>
        /// Shows how long, in minutes, that the record was on hold.
        /// </summary>
        public System.Nullable<int> OnHoldTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        public System.Nullable<System.DateTime> OverriddenCreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
                this.OnPropertyChanged("OverriddenCreatedOn");
            }
        }

        /// <summary>
        /// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference OwnerId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("ownerid");
            }
            set
            {
                this.SetAttributeValue("ownerid", value);
                this.OnPropertyChanged("OwnerId");
            }
        }

        /// <summary>
        /// Shows the record owner's business unit.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference OwningBusinessUnit
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("owningbusinessunit");
            }
        }

        /// <summary>
        /// Unique identifier of the team that owns the task.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference OwningTeam
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier of the user that owns the task.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference OwningUser
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Type the percentage complete value for the task to track tasks to completion.
        /// </summary>
        public System.Nullable<int> PercentComplete
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("percentcomplete");
            }
            set
            {
                this.SetAttributeValue("percentcomplete", value);
                this.OnPropertyChanged("PercentComplete");
            }
        }

        /// <summary>
        /// Select the priority so that preferred customers or critical issues are handled quickly.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue PriorityCode
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("prioritycode");
            }
            set
            {
                this.SetAttributeValue("prioritycode", value);
                this.OnPropertyChanged("PriorityCode");
            }
        }

        /// <summary>
        /// Shows the ID of the process.
        /// </summary>
        public System.Nullable<System.Guid> ProcessId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
            }
            set
            {
                this.SetAttributeValue("processid", value);
                this.OnPropertyChanged("ProcessId");
            }
        }

        /// <summary>
        /// Unique identifier of the object with which the task is associated.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference RegardingObjectId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("regardingobjectid");
            }
            set
            {
                this.SetAttributeValue("regardingobjectid", value);
                this.OnPropertyChanged("RegardingObjectId");
            }
        }

        /// <summary>
        /// Scheduled duration of the task, specified in minutes.
        /// </summary>
        public System.Nullable<int> ScheduledDurationMinutes
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("scheduleddurationminutes");
            }
        }

        /// <summary>
        /// Enter the expected due date and time.
        /// </summary>
        public System.Nullable<System.DateTime> ScheduledEnd
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
            }
            set
            {
                this.SetAttributeValue("scheduledend", value);
                this.OnPropertyChanged("ScheduledEnd");
            }
        }

        /// <summary>
        /// Enter the expected due date and time.
        /// </summary>
        public System.Nullable<System.DateTime> ScheduledStart
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
            }
            set
            {
                this.SetAttributeValue("scheduledstart", value);
                this.OnPropertyChanged("ScheduledStart");
            }
        }

        /// <summary>
        /// Choose the service that is associated with this activity.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference ServiceId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("serviceid");
            }
            set
            {
                this.SetAttributeValue("serviceid", value);
                this.OnPropertyChanged("ServiceId");
            }
        }

        /// <summary>
        /// Choose the service level agreement (SLA) that you want to apply to the Task record.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference SLAId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("slaid");
            }
            set
            {
                this.SetAttributeValue("slaid", value);
                this.OnPropertyChanged("SLAId");
            }
        }

        /// <summary>
        /// Last SLA that was applied to this Task. This field is for internal use only.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference SLAInvokedId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("slainvokedid");
            }
        }

        /// <summary>
        /// Shows the ID of the stage.
        /// </summary>
        public System.Nullable<System.Guid> StageId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
            }
            set
            {
                this.SetAttributeValue("stageid", value);
                this.OnPropertyChanged("StageId");
            }
        }

        /// <summary>
        /// Shows whether the task is open, completed, or canceled. Completed and canceled tasks are read-only and can't be edited.
        /// </summary>
        public System.Nullable<Common.Model.TaskState> StateCode
        {
            get
            {
                Microsoft.Xrm.Sdk.Samples.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("statecode");
                if ((optionSet != null))
                {
                    return ((Common.Model.TaskState)(System.Enum.ToObject(typeof(Common.Model.TaskState), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
            set
            {
                if ((value == null))
                {
                    this.SetAttributeValue("statecode", null);
                }
                else
                {
                    this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.Samples.OptionSetValue(((int)(value))));
                }
                this.OnPropertyChanged("StateCode");
            }
        }

        /// <summary>
        /// Select the task's status.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue StatusCode
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("statuscode");
            }
            set
            {
                this.SetAttributeValue("statuscode", value);
                this.OnPropertyChanged("StatusCode");
            }
        }

        /// <summary>
        /// Type a subcategory to identify the task type and relate the activity to a specific product, sales region, business group, or other function.
        /// </summary>
        public string Subcategory
        {
            get
            {
                return this.GetAttributeValue<string>("subcategory");
            }
            set
            {
                this.SetAttributeValue("subcategory", value);
                this.OnPropertyChanged("Subcategory");
            }
        }

        /// <summary>
        /// Type a short description about the objective or primary topic of the task.
        /// </summary>
        public string Subject
        {
            get
            {
                return this.GetAttributeValue<string>("subject");
            }
            set
            {
                this.SetAttributeValue("subject", value);
                this.OnPropertyChanged("Subject");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public System.Nullable<System.Guid> SubscriptionId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("subscriptionid");
            }
            set
            {
                this.SetAttributeValue("subscriptionid", value);
                this.OnPropertyChanged("SubscriptionId");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public System.Nullable<int> TimeZoneRuleVersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
                this.OnPropertyChanged("TimeZoneRuleVersionNumber");
            }
        }

        /// <summary>
        /// Choose the local currency for the record to make sure budgets are reported in the correct currency.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference TransactionCurrencyId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("transactioncurrencyid");
            }
            set
            {
                this.SetAttributeValue("transactioncurrencyid", value);
                this.OnPropertyChanged("TransactionCurrencyId");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public string TraversedPath
        {
            get
            {
                return this.GetAttributeValue<string>("traversedpath");
            }
            set
            {
                this.SetAttributeValue("traversedpath", value);
                this.OnPropertyChanged("TraversedPath");
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        public System.Nullable<int> UTCConversionTimeZoneCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
                this.OnPropertyChanged("UTCConversionTimeZoneCode");
            }
        }

        /// <summary>
        /// Version number of the task.
        /// </summary>
        public System.Nullable<long> VersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 Account_Tasks
        /// </summary>
        public Common.Model.Account Account_Tasks
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.Account>("Account_Tasks", null);
            }
            set
            {
                this.SetRelatedEntity<Common.Model.Account>("Account_Tasks", null, value);
                this.OnPropertyChanged("Account_Tasks");
            }
        }

        /// <summary>
        /// N:1 lk_task_createdby
        /// </summary>
        public Common.Model.SystemUser lk_task_createdby
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.SystemUser>("lk_task_createdby", null);
            }
        }

        /// <summary>
        /// N:1 lk_task_createdonbehalfby
        /// </summary>
        public Common.Model.SystemUser lk_task_createdonbehalfby
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.SystemUser>("lk_task_createdonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 lk_task_modifiedby
        /// </summary>
        public Common.Model.SystemUser lk_task_modifiedby
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.SystemUser>("lk_task_modifiedby", null);
            }
        }

        /// <summary>
        /// N:1 lk_task_modifiedonbehalfby
        /// </summary>
        public Common.Model.SystemUser lk_task_modifiedonbehalfby
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.SystemUser>("lk_task_modifiedonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 msdyn_projectteam_Tasks
        /// </summary>
        public Common.Model.msdyn_projectteam msdyn_projectteam_Tasks
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.msdyn_projectteam>("msdyn_projectteam_Tasks", null);
            }
            set
            {
                this.SetRelatedEntity<Common.Model.msdyn_projectteam>("msdyn_projectteam_Tasks", null, value);
                this.OnPropertyChanged("msdyn_projectteam_Tasks");
            }
        }

        /// <summary>
        /// N:1 TransactionCurrency_Task
        /// </summary>
        public Common.Model.TransactionCurrency TransactionCurrency_Task
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.TransactionCurrency>("TransactionCurrency_Task", null);
            }
            set
            {
                this.SetRelatedEntity<Common.Model.TransactionCurrency>("TransactionCurrency_Task", null, value);
                this.OnPropertyChanged("TransactionCurrency_Task");
            }
        }

        /// <summary>
        /// N:1 user_task
        /// </summary>
        public Common.Model.SystemUser user_task
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.SystemUser>("user_task", null);
            }
        }
    }
}
