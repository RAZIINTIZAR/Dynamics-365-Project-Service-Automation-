//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Common.Model
{
    /// <summary>
    /// Note that is attached to one or more objects, including other notes.
    /// </summary>
    public partial class Annotation : Microsoft.Xrm.Sdk.Samples.Entity, System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Default Constructor.
        /// </summary>
        public Annotation() :
                base(EntityLogicalName)
        {
        }

        public const string EntityLogicalName = "annotation";

        public const int EntityTypeCode = 5;

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        /// <summary>
        /// Unique identifier of the note.
        /// </summary>
        public System.Nullable<System.Guid> AnnotationId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("annotationid");
            }
            set
            {
                this.SetAttributeValue("annotationid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }
                this.OnPropertyChanged("AnnotationId");
            }
        }

        public override System.Guid Id
        {
            get
            {
                return base.Id;
            }
            set
            {
                this.AnnotationId = value;
            }
        }

        /// <summary>
        /// Unique identifier of the user who created the note.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Date and time when the note was created.
        /// </summary>
        public System.Nullable<System.DateTime> CreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the annotation.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference CreatedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("createdonbehalfby");
            }
        }

        /// <summary>
        /// Contents of the note's attachment.
        /// </summary>
        public string DocumentBody
        {
            get
            {
                return this.GetAttributeValue<string>("documentbody");
            }
            set
            {
                this.SetAttributeValue("documentbody", value);
                this.OnPropertyChanged("DocumentBody");
            }
        }

        /// <summary>
        /// File name of the note.
        /// </summary>
        public string FileName
        {
            get
            {
                return this.GetAttributeValue<string>("filename");
            }
            set
            {
                this.SetAttributeValue("filename", value);
                this.OnPropertyChanged("FileName");
            }
        }

        /// <summary>
        /// File size of the note.
        /// </summary>
        public System.Nullable<int> FileSize
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("filesize");
            }
        }

        /// <summary>
        /// Unique identifier of the data import or data migration that created this record.
        /// </summary>
        public System.Nullable<int> ImportSequenceNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }
            set
            {
                this.SetAttributeValue("importsequencenumber", value);
                this.OnPropertyChanged("ImportSequenceNumber");
            }
        }

        /// <summary>
        /// Specifies whether the note is an attachment.
        /// </summary>
        public System.Nullable<bool> IsDocument
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isdocument");
            }
            set
            {
                this.SetAttributeValue("isdocument", value);
                this.OnPropertyChanged("IsDocument");
            }
        }

        /// <summary>
        /// Language identifier for the note.
        /// </summary>
        public string LangId
        {
            get
            {
                return this.GetAttributeValue<string>("langid");
            }
            set
            {
                this.SetAttributeValue("langid", value);
                this.OnPropertyChanged("LangId");
            }
        }

        /// <summary>
        /// MIME type of the note's attachment.
        /// </summary>
        public string MimeType
        {
            get
            {
                return this.GetAttributeValue<string>("mimetype");
            }
            set
            {
                this.SetAttributeValue("mimetype", value);
                this.OnPropertyChanged("MimeType");
            }
        }

        /// <summary>
        /// Unique identifier of the user who last modified the note.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Date and time when the note was last modified.
        /// </summary>
        public System.Nullable<System.DateTime> ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who last modified the annotation.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference ModifiedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("modifiedonbehalfby");
            }
        }

        /// <summary>
        /// Text of the note.
        /// </summary>
        public string NoteText
        {
            get
            {
                return this.GetAttributeValue<string>("notetext");
            }
            set
            {
                this.SetAttributeValue("notetext", value);
                this.OnPropertyChanged("NoteText");
            }
        }

        /// <summary>
        /// Unique identifier of the object with which the note is associated.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference ObjectId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("objectid");
            }
            set
            {
                this.SetAttributeValue("objectid", value);
                this.OnPropertyChanged("ObjectId");
            }
        }

        /// <summary>
        /// Type of entity with which the note is associated.
        /// </summary>
        public string ObjectTypeCode
        {
            get
            {
                return this.GetAttributeValue<string>("objecttypecode");
            }
            set
            {
                this.SetAttributeValue("objecttypecode", value);
                this.OnPropertyChanged("ObjectTypeCode");
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        public System.Nullable<System.DateTime> OverriddenCreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }
            set
            {
                this.SetAttributeValue("overriddencreatedon", value);
                this.OnPropertyChanged("OverriddenCreatedOn");
            }
        }

        /// <summary>
        /// Unique identifier of the user or team who owns the note.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference OwnerId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("ownerid");
            }
            set
            {
                this.SetAttributeValue("ownerid", value);
                this.OnPropertyChanged("OwnerId");
            }
        }

        /// <summary>
        /// Unique identifier of the business unit that owns the note.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference OwningBusinessUnit
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("owningbusinessunit");
            }
        }

        /// <summary>
        /// Unique identifier of the team who owns the note.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference OwningTeam
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier of the user who owns the note.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference OwningUser
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// workflow step id associated with the note.
        /// </summary>
        public string StepId
        {
            get
            {
                return this.GetAttributeValue<string>("stepid");
            }
            set
            {
                this.SetAttributeValue("stepid", value);
                this.OnPropertyChanged("StepId");
            }
        }

        /// <summary>
        /// Subject associated with the note.
        /// </summary>
        public string Subject
        {
            get
            {
                return this.GetAttributeValue<string>("subject");
            }
            set
            {
                this.SetAttributeValue("subject", value);
                this.OnPropertyChanged("Subject");
            }
        }

        /// <summary>
        /// Version number of the note.
        /// </summary>
        public System.Nullable<long> VersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// N:1 msdyn_expensecategory_Annotations
        /// </summary>
        public Common.Model.msdyn_expensecategory msdyn_expensecategory_Annotations
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.msdyn_expensecategory>("msdyn_expensecategory_Annotations", null);
            }
            set
            {
                this.SetRelatedEntity<Common.Model.msdyn_expensecategory>("msdyn_expensecategory_Annotations", null, value);
                this.OnPropertyChanged("msdyn_expensecategory_Annotations");
            }
        }

        /// <summary>
        /// N:1 msdyn_expensereceipt_Annotations
        /// </summary>
        public Common.Model.msdyn_expensereceipt msdyn_expensereceipt_Annotations
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.msdyn_expensereceipt>("msdyn_expensereceipt_Annotations", null);
            }
            set
            {
                this.SetRelatedEntity<Common.Model.msdyn_expensereceipt>("msdyn_expensereceipt_Annotations", null, value);
                this.OnPropertyChanged("msdyn_expensereceipt_Annotations");
            }
        }

        /// <summary>
        /// N:1 msdyn_projecttask_Annotations
        /// </summary>
        public Common.Model.msdyn_projecttask msdyn_projecttask_Annotations
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.msdyn_projecttask>("msdyn_projecttask_Annotations", null);
            }
            set
            {
                this.SetRelatedEntity<Common.Model.msdyn_projecttask>("msdyn_projecttask_Annotations", null, value);
                this.OnPropertyChanged("msdyn_projecttask_Annotations");
            }
        }

        /// <summary>
        /// N:1 msdyn_transactioncategory_Annotations
        /// </summary>
        public Common.Model.msdyn_transactioncategory msdyn_transactioncategory_Annotations
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.msdyn_transactioncategory>("msdyn_transactioncategory_Annotations", null);
            }
            set
            {
                this.SetRelatedEntity<Common.Model.msdyn_transactioncategory>("msdyn_transactioncategory_Annotations", null, value);
                this.OnPropertyChanged("msdyn_transactioncategory_Annotations");
            }
        }

        /// <summary>
        /// N:1 msdyn_transactioncategoryhierarchyelement_Annotations
        /// </summary>
        public Common.Model.msdyn_transactioncategoryhierarchyelement msdyn_transactioncategoryhierarchyelement_Annotations
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.msdyn_transactioncategoryhierarchyelement>("msdyn_transactioncategoryhierarchyelement_Annotations", null);
            }
            set
            {
                this.SetRelatedEntity<Common.Model.msdyn_transactioncategoryhierarchyelement>("msdyn_transactioncategoryhierarchyelement_Annotations", null, value);
                this.OnPropertyChanged("msdyn_transactioncategoryhierarchyelement_Annotations");
            }
        }
    }
}
