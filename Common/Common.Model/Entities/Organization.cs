//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Common.Model
{
    /// <summary>
    /// Top level of the Microsoft Dynamics CRM business hierarchy. The organization can be a specific business, holding company, or corporation.
    /// </summary>
    public partial class Organization : Microsoft.Xrm.Sdk.Samples.Entity, System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Default Constructor.
        /// </summary>
        public Organization() : base(EntityLogicalName)
        {
        }

        public const string EntityLogicalName = "organization";

        public const int EntityTypeCode = 1019;

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        /// <summary>
        /// Unique identifier of the template to be used for acknowledgement when a user unsubscribes.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference AcknowledgementTemplateId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("acknowledgementtemplateid");
            }
            set
            {
                this.SetAttributeValue("acknowledgementtemplateid", value);
                this.OnPropertyChanged("AcknowledgementTemplateId");
            }
        }

        /// <summary>
        /// Indicates whether background address book synchronization in Microsoft Office Outlook is allowed.
        /// </summary>
        public System.Nullable<bool> AllowAddressBookSyncs
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowaddressbooksyncs");
            }
            set
            {
                this.SetAttributeValue("allowaddressbooksyncs", value);
                this.OnPropertyChanged("AllowAddressBookSyncs");
            }
        }

        /// <summary>
        /// Indicates whether automatic response creation is allowed.
        /// </summary>
        public System.Nullable<bool> AllowAutoResponseCreation
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowautoresponsecreation");
            }
            set
            {
                this.SetAttributeValue("allowautoresponsecreation", value);
                this.OnPropertyChanged("AllowAutoResponseCreation");
            }
        }

        /// <summary>
        /// Indicates whether automatic unsubscribe is allowed.
        /// </summary>
        public System.Nullable<bool> AllowAutoUnsubscribe
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowautounsubscribe");
            }
            set
            {
                this.SetAttributeValue("allowautounsubscribe", value);
                this.OnPropertyChanged("AllowAutoUnsubscribe");
            }
        }

        /// <summary>
        /// Indicates whether automatic unsubscribe acknowledgement email is allowed to send.
        /// </summary>
        public System.Nullable<bool> AllowAutoUnsubscribeAcknowledgement
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowautounsubscribeacknowledgement");
            }
            set
            {
                this.SetAttributeValue("allowautounsubscribeacknowledgement", value);
                this.OnPropertyChanged("AllowAutoUnsubscribeAcknowledgement");
            }
        }

        /// <summary>
        /// Indicates whether Outlook Client message bar advertisement is allowed.
        /// </summary>
        public System.Nullable<bool> AllowClientMessageBarAd
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowclientmessagebarad");
            }
            set
            {
                this.SetAttributeValue("allowclientmessagebarad", value);
                this.OnPropertyChanged("AllowClientMessageBarAd");
            }
        }

        /// <summary>
        /// Indicates whether auditing of changes to entity is allowed when no attributes have changed.
        /// </summary>
        public System.Nullable<bool> AllowEntityOnlyAudit
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowentityonlyaudit");
            }
            set
            {
                this.SetAttributeValue("allowentityonlyaudit", value);
                this.OnPropertyChanged("AllowEntityOnlyAudit");
            }
        }

        /// <summary>
        /// Indicates whether marketing emails execution is allowed.
        /// </summary>
        public System.Nullable<bool> AllowMarketingEmailExecution
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowmarketingemailexecution");
            }
            set
            {
                this.SetAttributeValue("allowmarketingemailexecution", value);
                this.OnPropertyChanged("AllowMarketingEmailExecution");
            }
        }

        /// <summary>
        /// Indicates whether background offline synchronization in Microsoft Office Outlook is allowed.
        /// </summary>
        public System.Nullable<bool> AllowOfflineScheduledSyncs
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowofflinescheduledsyncs");
            }
            set
            {
                this.SetAttributeValue("allowofflinescheduledsyncs", value);
                this.OnPropertyChanged("AllowOfflineScheduledSyncs");
            }
        }

        /// <summary>
        /// Indicates whether scheduled synchronizations to Outlook are allowed.
        /// </summary>
        public System.Nullable<bool> AllowOutlookScheduledSyncs
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowoutlookscheduledsyncs");
            }
            set
            {
                this.SetAttributeValue("allowoutlookscheduledsyncs", value);
                this.OnPropertyChanged("AllowOutlookScheduledSyncs");
            }
        }

        /// <summary>
        /// Indicates whether users are allowed to send email to unresolved parties (parties must still have an email address).
        /// </summary>
        public System.Nullable<bool> AllowUnresolvedPartiesOnEmailSend
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowunresolvedpartiesonemailsend");
            }
            set
            {
                this.SetAttributeValue("allowunresolvedpartiesonemailsend", value);
                this.OnPropertyChanged("AllowUnresolvedPartiesOnEmailSend");
            }
        }

        /// <summary>
        /// Indicates whether individuals can select their form mode preference in their personal options.
        /// </summary>
        public System.Nullable<bool> AllowUserFormModePreference
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowuserformmodepreference");
            }
            set
            {
                this.SetAttributeValue("allowuserformmodepreference", value);
                this.OnPropertyChanged("AllowUserFormModePreference");
            }
        }

        /// <summary>
        /// Indicates whether the showing tablet application notification bars in a browser is allowed.
        /// </summary>
        public System.Nullable<bool> AllowUsersSeeAppdownloadMessage
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowusersseeappdownloadmessage");
            }
            set
            {
                this.SetAttributeValue("allowusersseeappdownloadmessage", value);
                this.OnPropertyChanged("AllowUsersSeeAppdownloadMessage");
            }
        }

        /// <summary>
        /// Indicates whether Web-based export of grids to Microsoft Office Excel is allowed.
        /// </summary>
        public System.Nullable<bool> AllowWebExcelExport
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowwebexcelexport");
            }
            set
            {
                this.SetAttributeValue("allowwebexcelexport", value);
                this.OnPropertyChanged("AllowWebExcelExport");
            }
        }

        /// <summary>
        /// AM designator to use throughout Microsoft Dynamics CRM.
        /// </summary>
        public string AMDesignator
        {
            get
            {
                return this.GetAttributeValue<string>("amdesignator");
            }
            set
            {
                this.SetAttributeValue("amdesignator", value);
                this.OnPropertyChanged("AMDesignator");
            }
        }

        /// <summary>
        /// Indicates whether the appDesignerExperience is enabled for the organization.
        /// </summary>
        public System.Nullable<bool> AppDesignerExperienceEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("appdesignerexperienceenabled");
            }
            set
            {
                this.SetAttributeValue("appdesignerexperienceenabled", value);
                this.OnPropertyChanged("AppDesignerExperienceEnabled");
            }
        }

        /// <summary>
        /// Select whether to auto apply the default customer entitlement on case creation.
        /// </summary>
        public System.Nullable<bool> AutoApplyDefaultonCaseCreate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("autoapplydefaultoncasecreate");
            }
            set
            {
                this.SetAttributeValue("autoapplydefaultoncasecreate", value);
                this.OnPropertyChanged("AutoApplyDefaultonCaseCreate");
            }
        }

        /// <summary>
        /// Select whether to auto apply the default customer entitlement on case update.
        /// </summary>
        public System.Nullable<bool> AutoApplyDefaultonCaseUpdate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("autoapplydefaultoncaseupdate");
            }
            set
            {
                this.SetAttributeValue("autoapplydefaultoncaseupdate", value);
                this.OnPropertyChanged("AutoApplyDefaultonCaseUpdate");
            }
        }

        /// <summary>
        /// Indicates whether to Auto-apply SLA on case record update after SLA was manually applied.
        /// </summary>
        public System.Nullable<bool> AutoApplySLA
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("autoapplysla");
            }
            set
            {
                this.SetAttributeValue("autoapplysla", value);
                this.OnPropertyChanged("AutoApplySLA");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public string AzureSchedulerJobCollectionName
        {
            get
            {
                return this.GetAttributeValue<string>("azureschedulerjobcollectionname");
            }
            set
            {
                this.SetAttributeValue("azureschedulerjobcollectionname", value);
                this.OnPropertyChanged("AzureSchedulerJobCollectionName");
            }
        }

        /// <summary>
        /// Unique identifier of the base currency of the organization.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference BaseCurrencyId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("basecurrencyid");
            }
            set
            {
                this.SetAttributeValue("basecurrencyid", value);
                this.OnPropertyChanged("BaseCurrencyId");
            }
        }

        /// <summary>
        /// Number of decimal places that can be used for the base currency.
        /// </summary>
        public System.Nullable<int> BaseCurrencyPrecision
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("basecurrencyprecision");
            }
        }

        /// <summary>
        /// Symbol used for the base currency.
        /// </summary>
        public string BaseCurrencySymbol
        {
            get
            {
                return this.GetAttributeValue<string>("basecurrencysymbol");
            }
        }

        /// <summary>
        /// Api Key to be used in requests to Bing Maps services.
        /// </summary>
        public string BingMapsApiKey
        {
            get
            {
                return this.GetAttributeValue<string>("bingmapsapikey");
            }
            set
            {
                this.SetAttributeValue("bingmapsapikey", value);
                this.OnPropertyChanged("BingMapsApiKey");
            }
        }

        /// <summary>
        /// Prevent upload or download of certain attachment types that are considered dangerous.
        /// </summary>
        public string BlockedAttachments
        {
            get
            {
                return this.GetAttributeValue<string>("blockedattachments");
            }
            set
            {
                this.SetAttributeValue("blockedattachments", value);
                this.OnPropertyChanged("BlockedAttachments");
            }
        }

        /// <summary>
        /// Prefix used for bulk operation numbering.
        /// </summary>
        public string BulkOperationPrefix
        {
            get
            {
                return this.GetAttributeValue<string>("bulkoperationprefix");
            }
            set
            {
                this.SetAttributeValue("bulkoperationprefix", value);
                this.OnPropertyChanged("BulkOperationPrefix");
            }
        }

        /// <summary>
        /// Unique identifier of the business closure calendar of organization.
        /// </summary>
        public System.Nullable<System.Guid> BusinessClosureCalendarId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("businessclosurecalendarid");
            }
            set
            {
                this.SetAttributeValue("businessclosurecalendarid", value);
                this.OnPropertyChanged("BusinessClosureCalendarId");
            }
        }

        /// <summary>
        /// Calendar type for the system. Set to Gregorian US by default.
        /// </summary>
        public System.Nullable<int> CalendarType
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("calendartype");
            }
            set
            {
                this.SetAttributeValue("calendartype", value);
                this.OnPropertyChanged("CalendarType");
            }
        }

        /// <summary>
        /// Prefix used for campaign numbering.
        /// </summary>
        public string CampaignPrefix
        {
            get
            {
                return this.GetAttributeValue<string>("campaignprefix");
            }
            set
            {
                this.SetAttributeValue("campaignprefix", value);
                this.OnPropertyChanged("CampaignPrefix");
            }
        }

        /// <summary>
        /// Flag to cascade Update on incident.
        /// </summary>
        public System.Nullable<bool> CascadeStatusUpdate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("cascadestatusupdate");
            }
            set
            {
                this.SetAttributeValue("cascadestatusupdate", value);
                this.OnPropertyChanged("CascadeStatusUpdate");
            }
        }

        /// <summary>
        /// Prefix to use for all cases throughout Microsoft Dynamics CRM.
        /// </summary>
        public string CasePrefix
        {
            get
            {
                return this.GetAttributeValue<string>("caseprefix");
            }
            set
            {
                this.SetAttributeValue("caseprefix", value);
                this.OnPropertyChanged("CasePrefix");
            }
        }

        /// <summary>
        /// Type the prefix to use for all categories in Microsoft Dynamics CRM.
        /// </summary>
        public string CategoryPrefix
        {
            get
            {
                return this.GetAttributeValue<string>("categoryprefix");
            }
            set
            {
                this.SetAttributeValue("categoryprefix", value);
                this.OnPropertyChanged("CategoryPrefix");
            }
        }

        /// <summary>
        /// Prefix to use for all contracts throughout Microsoft Dynamics CRM.
        /// </summary>
        public string ContractPrefix
        {
            get
            {
                return this.GetAttributeValue<string>("contractprefix");
            }
            set
            {
                this.SetAttributeValue("contractprefix", value);
                this.OnPropertyChanged("ContractPrefix");
            }
        }

        /// <summary>
        /// Indicates whether the feature CortanaProactiveExperience Flow processes should be enabled for the organization.
        /// </summary>
        public System.Nullable<bool> CortanaProactiveExperienceEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("cortanaproactiveexperienceenabled");
            }
            set
            {
                this.SetAttributeValue("cortanaproactiveexperienceenabled", value);
                this.OnPropertyChanged("CortanaProactiveExperienceEnabled");
            }
        }

        /// <summary>
        /// Unique identifier of the user who created the organization.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Date and time when the organization was created.
        /// </summary>
        public System.Nullable<System.DateTime> CreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the organization.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference CreatedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("createdonbehalfby");
            }
        }

        /// <summary>
        /// Enable Initial state of newly created products to be Active instead of Draft
        /// </summary>
        public System.Nullable<bool> CreateProductsWithoutParentInActiveState
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("createproductswithoutparentinactivestate");
            }
            set
            {
                this.SetAttributeValue("createproductswithoutparentinactivestate", value);
                this.OnPropertyChanged("CreateProductsWithoutParentInActiveState");
            }
        }

        /// <summary>
        /// Number of decimal places that can be used for currency.
        /// </summary>
        public System.Nullable<int> CurrencyDecimalPrecision
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currencydecimalprecision");
            }
            set
            {
                this.SetAttributeValue("currencydecimalprecision", value);
                this.OnPropertyChanged("CurrencyDecimalPrecision");
            }
        }

        /// <summary>
        /// Indicates whether to display money fields with currency code or currency symbol.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue CurrencyDisplayOption
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("currencydisplayoption");
            }
            set
            {
                this.SetAttributeValue("currencydisplayoption", value);
                this.OnPropertyChanged("CurrencyDisplayOption");
            }
        }

        /// <summary>
        /// Information about how currency symbols are placed throughout Microsoft Dynamics CRM.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue CurrencyFormatCode
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("currencyformatcode");
            }
            set
            {
                this.SetAttributeValue("currencyformatcode", value);
                this.OnPropertyChanged("CurrencyFormatCode");
            }
        }

        /// <summary>
        /// Symbol used for currency throughout Microsoft Dynamics CRM.
        /// </summary>
        public string CurrencySymbol
        {
            get
            {
                return this.GetAttributeValue<string>("currencysymbol");
            }
            set
            {
                this.SetAttributeValue("currencysymbol", value);
                this.OnPropertyChanged("CurrencySymbol");
            }
        }

        /// <summary>
        /// Current bulk operation number.
        /// </summary>
        public System.Nullable<int> CurrentBulkOperationNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currentbulkoperationnumber");
            }
            set
            {
                this.SetAttributeValue("currentbulkoperationnumber", value);
                this.OnPropertyChanged("CurrentBulkOperationNumber");
            }
        }

        /// <summary>
        /// Current campaign number.
        /// </summary>
        public System.Nullable<int> CurrentCampaignNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currentcampaignnumber");
            }
            set
            {
                this.SetAttributeValue("currentcampaignnumber", value);
                this.OnPropertyChanged("CurrentCampaignNumber");
            }
        }

        /// <summary>
        /// First case number to use.
        /// </summary>
        public System.Nullable<int> CurrentCaseNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currentcasenumber");
            }
            set
            {
                this.SetAttributeValue("currentcasenumber", value);
                this.OnPropertyChanged("CurrentCaseNumber");
            }
        }

        /// <summary>
        /// Enter the first number to use for Categories.
        /// </summary>
        public System.Nullable<int> CurrentCategoryNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currentcategorynumber");
            }
            set
            {
                this.SetAttributeValue("currentcategorynumber", value);
                this.OnPropertyChanged("CurrentCategoryNumber");
            }
        }

        /// <summary>
        /// First contract number to use.
        /// </summary>
        public System.Nullable<int> CurrentContractNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currentcontractnumber");
            }
            set
            {
                this.SetAttributeValue("currentcontractnumber", value);
                this.OnPropertyChanged("CurrentContractNumber");
            }
        }

        /// <summary>
        /// Import sequence to use.
        /// </summary>
        public System.Nullable<int> CurrentImportSequenceNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currentimportsequencenumber");
            }
        }

        /// <summary>
        /// First invoice number to use.
        /// </summary>
        public System.Nullable<int> CurrentInvoiceNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currentinvoicenumber");
            }
            set
            {
                this.SetAttributeValue("currentinvoicenumber", value);
                this.OnPropertyChanged("CurrentInvoiceNumber");
            }
        }

        /// <summary>
        /// Enter the first number to use for knowledge articles.
        /// </summary>
        public System.Nullable<int> CurrentKaNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currentkanumber");
            }
            set
            {
                this.SetAttributeValue("currentkanumber", value);
                this.OnPropertyChanged("CurrentKaNumber");
            }
        }

        /// <summary>
        /// First article number to use.
        /// </summary>
        public System.Nullable<int> CurrentKbNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currentkbnumber");
            }
            set
            {
                this.SetAttributeValue("currentkbnumber", value);
                this.OnPropertyChanged("CurrentKbNumber");
            }
        }

        /// <summary>
        /// First order number to use.
        /// </summary>
        public System.Nullable<int> CurrentOrderNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currentordernumber");
            }
            set
            {
                this.SetAttributeValue("currentordernumber", value);
                this.OnPropertyChanged("CurrentOrderNumber");
            }
        }

        /// <summary>
        /// First parsed table number to use.
        /// </summary>
        public System.Nullable<int> CurrentParsedTableNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currentparsedtablenumber");
            }
        }

        /// <summary>
        /// First quote number to use.
        /// </summary>
        public System.Nullable<int> CurrentQuoteNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currentquotenumber");
            }
            set
            {
                this.SetAttributeValue("currentquotenumber", value);
                this.OnPropertyChanged("CurrentQuoteNumber");
            }
        }

        /// <summary>
        /// Information about how the date is displayed throughout Microsoft CRM.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue DateFormatCode
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("dateformatcode");
            }
            set
            {
                this.SetAttributeValue("dateformatcode", value);
                this.OnPropertyChanged("DateFormatCode");
            }
        }

        /// <summary>
        /// String showing how the date is displayed throughout Microsoft CRM.
        /// </summary>
        public string DateFormatString
        {
            get
            {
                return this.GetAttributeValue<string>("dateformatstring");
            }
            set
            {
                this.SetAttributeValue("dateformatstring", value);
                this.OnPropertyChanged("DateFormatString");
            }
        }

        /// <summary>
        /// Character used to separate the month, the day, and the year in dates throughout Microsoft Dynamics CRM.
        /// </summary>
        public string DateSeparator
        {
            get
            {
                return this.GetAttributeValue<string>("dateseparator");
            }
            set
            {
                this.SetAttributeValue("dateseparator", value);
                this.OnPropertyChanged("DateSeparator");
            }
        }

        /// <summary>
        /// The maximum value for the Mobile Offline setting Days since record last modified
        /// </summary>
        public System.Nullable<int> DaysSinceRecordLastModifiedMaxValue
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("dayssincerecordlastmodifiedmaxvalue");
            }
        }

        /// <summary>
        /// Symbol used for decimal in Microsoft Dynamics CRM.
        /// </summary>
        public string DecimalSymbol
        {
            get
            {
                return this.GetAttributeValue<string>("decimalsymbol");
            }
            set
            {
                this.SetAttributeValue("decimalsymbol", value);
                this.OnPropertyChanged("DecimalSymbol");
            }
        }

        /// <summary>
        /// Text area to enter default country code.
        /// </summary>
        public string DefaultCountryCode
        {
            get
            {
                return this.GetAttributeValue<string>("defaultcountrycode");
            }
            set
            {
                this.SetAttributeValue("defaultcountrycode", value);
                this.OnPropertyChanged("DefaultCountryCode");
            }
        }

        /// <summary>
        /// Name of the default crm custom.
        /// </summary>
        public string DefaultCrmCustomName
        {
            get
            {
                return this.GetAttributeValue<string>("defaultcrmcustomname");
            }
            set
            {
                this.SetAttributeValue("defaultcrmcustomname", value);
                this.OnPropertyChanged("DefaultCrmCustomName");
            }
        }

        /// <summary>
        /// Unique identifier of the default email server profile.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference DefaultEmailServerProfileId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("defaultemailserverprofileid");
            }
            set
            {
                this.SetAttributeValue("defaultemailserverprofileid", value);
                this.OnPropertyChanged("DefaultEmailServerProfileId");
            }
        }

        /// <summary>
        /// XML string containing the default email settings that are applied when a user or queue is created.
        /// </summary>
        public string DefaultEmailSettings
        {
            get
            {
                return this.GetAttributeValue<string>("defaultemailsettings");
            }
            set
            {
                this.SetAttributeValue("defaultemailsettings", value);
                this.OnPropertyChanged("DefaultEmailSettings");
            }
        }

        /// <summary>
        /// Unique identifier of the default mobile offline profile.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference DefaultMobileOfflineProfileId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("defaultmobileofflineprofileid");
            }
            set
            {
                this.SetAttributeValue("defaultmobileofflineprofileid", value);
                this.OnPropertyChanged("DefaultMobileOfflineProfileId");
            }
        }

        /// <summary>
        /// Type of default recurrence end range date.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue DefaultRecurrenceEndRangeType
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("defaultrecurrenceendrangetype");
            }
            set
            {
                this.SetAttributeValue("defaultrecurrenceendrangetype", value);
                this.OnPropertyChanged("DefaultRecurrenceEndRangeType");
            }
        }

        /// <summary>
        /// Default theme data for the organization.
        /// </summary>
        public string DefaultThemeData
        {
            get
            {
                return this.GetAttributeValue<string>("defaultthemedata");
            }
            set
            {
                this.SetAttributeValue("defaultthemedata", value);
                this.OnPropertyChanged("DefaultThemeData");
            }
        }

        /// <summary>
        /// Unique identifier of the delegated admin user for the organization.
        /// </summary>
        public System.Nullable<System.Guid> DelegatedAdminUserId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("delegatedadminuserid");
            }
            set
            {
                this.SetAttributeValue("delegatedadminuserid", value);
                this.OnPropertyChanged("DelegatedAdminUserId");
            }
        }

        /// <summary>
        /// Reason for disabling the organization.
        /// </summary>
        public string DisabledReason
        {
            get
            {
                return this.GetAttributeValue<string>("disabledreason");
            }
        }

        /// <summary>
        /// Indicates whether Social Care is disabled.
        /// </summary>
        public System.Nullable<bool> DisableSocialCare
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("disablesocialcare");
            }
            set
            {
                this.SetAttributeValue("disablesocialcare", value);
                this.OnPropertyChanged("DisableSocialCare");
            }
        }

        /// <summary>
        /// Discount calculation method for the QOOI product.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue DiscountCalculationMethod
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("discountcalculationmethod");
            }
            set
            {
                this.SetAttributeValue("discountcalculationmethod", value);
                this.OnPropertyChanged("DiscountCalculationMethod");
            }
        }

        /// <summary>
        /// Indicates whether or not navigation tour is displayed.
        /// </summary>
        public System.Nullable<bool> DisplayNavigationTour
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("displaynavigationtour");
            }
            set
            {
                this.SetAttributeValue("displaynavigationtour", value);
                this.OnPropertyChanged("DisplayNavigationTour");
            }
        }

        /// <summary>
        /// Select if you want to use the Email Router or server-side synchronization for email processing.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue EmailConnectionChannel
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("emailconnectionchannel");
            }
            set
            {
                this.SetAttributeValue("emailconnectionchannel", value);
                this.OnPropertyChanged("EmailConnectionChannel");
            }
        }

        /// <summary>
        /// Flag to turn email correlation on or off.
        /// </summary>
        public System.Nullable<bool> EmailCorrelationEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("emailcorrelationenabled");
            }
            set
            {
                this.SetAttributeValue("emailcorrelationenabled", value);
                this.OnPropertyChanged("EmailCorrelationEnabled");
            }
        }

        /// <summary>
        /// Normal polling frequency used for sending email in Microsoft Office Outlook.
        /// </summary>
        public System.Nullable<int> EmailSendPollingPeriod
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("emailsendpollingperiod");
            }
            set
            {
                this.SetAttributeValue("emailsendpollingperiod", value);
                this.OnPropertyChanged("EmailSendPollingPeriod");
            }
        }

        /// <summary>
        /// Enable Integration with Bing Maps
        /// </summary>
        public System.Nullable<bool> EnableBingMapsIntegration
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("enablebingmapsintegration");
            }
            set
            {
                this.SetAttributeValue("enablebingmapsintegration", value);
                this.OnPropertyChanged("EnableBingMapsIntegration");
            }
        }

        /// <summary>
        /// Enable Integration with Microsoft Flow
        /// </summary>
        public System.Nullable<bool> EnableMicrosoftFlowIntegration
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("enablemicrosoftflowintegration");
            }
            set
            {
                this.SetAttributeValue("enablemicrosoftflowintegration", value);
                this.OnPropertyChanged("EnableMicrosoftFlowIntegration");
            }
        }

        /// <summary>
        /// Enable pricing calculations on a Create call.
        /// </summary>
        public System.Nullable<bool> EnablePricingOnCreate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("enablepricingoncreate");
            }
            set
            {
                this.SetAttributeValue("enablepricingoncreate", value);
                this.OnPropertyChanged("EnablePricingOnCreate");
            }
        }

        /// <summary>
        /// Use Smart Matching.
        /// </summary>
        public System.Nullable<bool> EnableSmartMatching
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("enablesmartmatching");
            }
            set
            {
                this.SetAttributeValue("enablesmartmatching", value);
                this.OnPropertyChanged("EnableSmartMatching");
            }
        }

        /// <summary>
        /// Organization setting to enforce read only plugins.
        /// </summary>
        public System.Nullable<bool> EnforceReadOnlyPlugins
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("enforcereadonlyplugins");
            }
            set
            {
                this.SetAttributeValue("enforcereadonlyplugins", value);
                this.OnPropertyChanged("EnforceReadOnlyPlugins");
            }
        }

        /// <summary>
        /// The default image for the entity.
        /// </summary>
        public byte[] EntityImage
        {
            get
            {
                return this.GetAttributeValue<byte[]>("entityimage");
            }
            set
            {
                this.SetAttributeValue("entityimage", value);
                this.OnPropertyChanged("EntityImage");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public System.Nullable<long> EntityImage_Timestamp
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public string EntityImage_URL
        {
            get
            {
                return this.GetAttributeValue<string>("entityimage_url");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public System.Nullable<System.Guid> EntityImageId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
            }
        }

        /// <summary>
        /// Maximum number of days to keep change tracking deleted records
        /// </summary>
        public System.Nullable<int> ExpireChangeTrackingInDays
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("expirechangetrackingindays");
            }
            set
            {
                this.SetAttributeValue("expirechangetrackingindays", value);
                this.OnPropertyChanged("ExpireChangeTrackingInDays");
            }
        }

        /// <summary>
        /// Maximum number of days before deleting inactive subscriptions.
        /// </summary>
        public System.Nullable<int> ExpireSubscriptionsInDays
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("expiresubscriptionsindays");
            }
            set
            {
                this.SetAttributeValue("expiresubscriptionsindays", value);
                this.OnPropertyChanged("ExpireSubscriptionsInDays");
            }
        }

        /// <summary>
        /// Specify the base URL to use to look for external document suggestions.
        /// </summary>
        public string ExternalBaseUrl
        {
            get
            {
                return this.GetAttributeValue<string>("externalbaseurl");
            }
            set
            {
                this.SetAttributeValue("externalbaseurl", value);
                this.OnPropertyChanged("ExternalBaseUrl");
            }
        }

        /// <summary>
        /// XML string containing the ExternalPartyEnabled entities correlation keys for association of existing External Party instance entities to newly created IsExternalPartyEnabled entities.For internal use only
        /// </summary>
        public string ExternalPartyCorrelationKeys
        {
            get
            {
                return this.GetAttributeValue<string>("externalpartycorrelationkeys");
            }
            set
            {
                this.SetAttributeValue("externalpartycorrelationkeys", value);
                this.OnPropertyChanged("ExternalPartyCorrelationKeys");
            }
        }

        /// <summary>
        /// XML string containing the ExternalPartyEnabled entities settings.
        /// </summary>
        public string ExternalPartyEntitySettings
        {
            get
            {
                return this.GetAttributeValue<string>("externalpartyentitysettings");
            }
            set
            {
                this.SetAttributeValue("externalpartyentitysettings", value);
                this.OnPropertyChanged("ExternalPartyEntitySettings");
            }
        }

        /// <summary>
        /// Features to be enabled as an XML BLOB.
        /// </summary>
        public string FeatureSet
        {
            get
            {
                return this.GetAttributeValue<string>("featureset");
            }
            set
            {
                this.SetAttributeValue("featureset", value);
                this.OnPropertyChanged("FeatureSet");
            }
        }

        /// <summary>
        /// Start date for the fiscal period that is to be used throughout Microsoft CRM.
        /// </summary>
        public System.Nullable<System.DateTime> FiscalCalendarStart
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("fiscalcalendarstart");
            }
            set
            {
                this.SetAttributeValue("fiscalcalendarstart", value);
                this.OnPropertyChanged("FiscalCalendarStart");
            }
        }

        /// <summary>
        /// Information that specifies how the name of the fiscal period is displayed throughout Microsoft CRM.
        /// </summary>
        public string FiscalPeriodFormat
        {
            get
            {
                return this.GetAttributeValue<string>("fiscalperiodformat");
            }
            set
            {
                this.SetAttributeValue("fiscalperiodformat", value);
                this.OnPropertyChanged("FiscalPeriodFormat");
            }
        }

        /// <summary>
        /// Format in which the fiscal period will be displayed.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue FiscalPeriodFormatPeriod
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("fiscalperiodformatperiod");
            }
            set
            {
                this.SetAttributeValue("fiscalperiodformatperiod", value);
                this.OnPropertyChanged("FiscalPeriodFormatPeriod");
            }
        }

        /// <summary>
        /// Type of fiscal period used throughout Microsoft CRM.
        /// </summary>
        public System.Nullable<int> FiscalPeriodType
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("fiscalperiodtype");
            }
            set
            {
                this.SetAttributeValue("fiscalperiodtype", value);
                this.OnPropertyChanged("FiscalPeriodType");
            }
        }

        /// <summary>
        /// Information that specifies whether the fiscal settings have been updated.
        /// </summary>
        [System.ObsoleteAttribute()]
        public System.Nullable<bool> FiscalSettingsUpdated
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("fiscalsettingsupdated");
            }
        }

        /// <summary>
        /// Information that specifies whether the fiscal year should be displayed based on the start date or the end date of the fiscal year.
        /// </summary>
        public System.Nullable<int> FiscalYearDisplayCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("fiscalyeardisplaycode");
            }
            set
            {
                this.SetAttributeValue("fiscalyeardisplaycode", value);
                this.OnPropertyChanged("FiscalYearDisplayCode");
            }
        }

        /// <summary>
        /// Information that specifies how the name of the fiscal year is displayed throughout Microsoft CRM.
        /// </summary>
        public string FiscalYearFormat
        {
            get
            {
                return this.GetAttributeValue<string>("fiscalyearformat");
            }
            set
            {
                this.SetAttributeValue("fiscalyearformat", value);
                this.OnPropertyChanged("FiscalYearFormat");
            }
        }

        /// <summary>
        /// Prefix for the display of the fiscal year.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue FiscalYearFormatPrefix
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("fiscalyearformatprefix");
            }
            set
            {
                this.SetAttributeValue("fiscalyearformatprefix", value);
                this.OnPropertyChanged("FiscalYearFormatPrefix");
            }
        }

        /// <summary>
        /// Suffix for the display of the fiscal year.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue FiscalYearFormatSuffix
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("fiscalyearformatsuffix");
            }
            set
            {
                this.SetAttributeValue("fiscalyearformatsuffix", value);
                this.OnPropertyChanged("FiscalYearFormatSuffix");
            }
        }

        /// <summary>
        /// Format for the year.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue FiscalYearFormatYear
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("fiscalyearformatyear");
            }
            set
            {
                this.SetAttributeValue("fiscalyearformatyear", value);
                this.OnPropertyChanged("FiscalYearFormatYear");
            }
        }

        /// <summary>
        /// Information that specifies how the names of the fiscal year and the fiscal period should be connected when displayed together.
        /// </summary>
        public string FiscalYearPeriodConnect
        {
            get
            {
                return this.GetAttributeValue<string>("fiscalyearperiodconnect");
            }
            set
            {
                this.SetAttributeValue("fiscalyearperiodconnect", value);
                this.OnPropertyChanged("FiscalYearPeriodConnect");
            }
        }

        /// <summary>
        /// Order in which names are to be displayed throughout Microsoft CRM.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue FullNameConventionCode
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("fullnameconventioncode");
            }
            set
            {
                this.SetAttributeValue("fullnameconventioncode", value);
                this.OnPropertyChanged("FullNameConventionCode");
            }
        }

        /// <summary>
        /// Specifies the maximum number of months in future for which the recurring activities can be created.
        /// </summary>
        public System.Nullable<int> FutureExpansionWindow
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("futureexpansionwindow");
            }
            set
            {
                this.SetAttributeValue("futureexpansionwindow", value);
                this.OnPropertyChanged("FutureExpansionWindow");
            }
        }

        /// <summary>
        /// Indicates whether alerts will be generated for errors.
        /// </summary>
        public System.Nullable<bool> GenerateAlertsForErrors
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("generatealertsforerrors");
            }
            set
            {
                this.SetAttributeValue("generatealertsforerrors", value);
                this.OnPropertyChanged("GenerateAlertsForErrors");
            }
        }

        /// <summary>
        /// Indicates whether alerts will be generated for information.
        /// </summary>
        public System.Nullable<bool> GenerateAlertsForInformation
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("generatealertsforinformation");
            }
            set
            {
                this.SetAttributeValue("generatealertsforinformation", value);
                this.OnPropertyChanged("GenerateAlertsForInformation");
            }
        }

        /// <summary>
        /// Indicates whether alerts will be generated for warnings.
        /// </summary>
        public System.Nullable<bool> GenerateAlertsForWarnings
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("generatealertsforwarnings");
            }
            set
            {
                this.SetAttributeValue("generatealertsforwarnings", value);
                this.OnPropertyChanged("GenerateAlertsForWarnings");
            }
        }

        /// <summary>
        /// Indicates whether Get Started content is enabled for this organization.
        /// </summary>
        public System.Nullable<bool> GetStartedPaneContentEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("getstartedpanecontentenabled");
            }
            set
            {
                this.SetAttributeValue("getstartedpanecontentenabled", value);
                this.OnPropertyChanged("GetStartedPaneContentEnabled");
            }
        }

        /// <summary>
        /// Indicates whether the append URL parameters is enabled.
        /// </summary>
        public System.Nullable<bool> GlobalAppendUrlParametersEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("globalappendurlparametersenabled");
            }
            set
            {
                this.SetAttributeValue("globalappendurlparametersenabled", value);
                this.OnPropertyChanged("GlobalAppendUrlParametersEnabled");
            }
        }

        /// <summary>
        /// URL for the web page global help.
        /// </summary>
        public string GlobalHelpUrl
        {
            get
            {
                return this.GetAttributeValue<string>("globalhelpurl");
            }
            set
            {
                this.SetAttributeValue("globalhelpurl", value);
                this.OnPropertyChanged("GlobalHelpUrl");
            }
        }

        /// <summary>
        /// Indicates whether the customizable global help is enabled.
        /// </summary>
        public System.Nullable<bool> GlobalHelpUrlEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("globalhelpurlenabled");
            }
            set
            {
                this.SetAttributeValue("globalhelpurlenabled", value);
                this.OnPropertyChanged("GlobalHelpUrlEnabled");
            }
        }

        /// <summary>
        /// Number of days after the goal's end date after which the rollup of the goal stops automatically.
        /// </summary>
        public System.Nullable<int> GoalRollupExpiryTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("goalrollupexpirytime");
            }
            set
            {
                this.SetAttributeValue("goalrollupexpirytime", value);
                this.OnPropertyChanged("GoalRollupExpiryTime");
            }
        }

        /// <summary>
        /// Number of hours between automatic rollup jobs .
        /// </summary>
        public System.Nullable<int> GoalRollupFrequency
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("goalrollupfrequency");
            }
            set
            {
                this.SetAttributeValue("goalrollupfrequency", value);
                this.OnPropertyChanged("GoalRollupFrequency");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public System.Nullable<bool> GrantAccessToNetworkService
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("grantaccesstonetworkservice");
            }
            set
            {
                this.SetAttributeValue("grantaccesstonetworkservice", value);
                this.OnPropertyChanged("GrantAccessToNetworkService");
            }
        }

        /// <summary>
        /// Maximum difference allowed between subject keywords count of the email messaged to be correlated
        /// </summary>
        public System.Nullable<int> HashDeltaSubjectCount
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("hashdeltasubjectcount");
            }
            set
            {
                this.SetAttributeValue("hashdeltasubjectcount", value);
                this.OnPropertyChanged("HashDeltaSubjectCount");
            }
        }

        /// <summary>
        /// Filter Subject Keywords
        /// </summary>
        public string HashFilterKeywords
        {
            get
            {
                return this.GetAttributeValue<string>("hashfilterkeywords");
            }
            set
            {
                this.SetAttributeValue("hashfilterkeywords", value);
                this.OnPropertyChanged("HashFilterKeywords");
            }
        }

        /// <summary>
        /// Maximum number of subject keywords or recipients used for correlation
        /// </summary>
        public System.Nullable<int> HashMaxCount
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("hashmaxcount");
            }
            set
            {
                this.SetAttributeValue("hashmaxcount", value);
                this.OnPropertyChanged("HashMaxCount");
            }
        }

        /// <summary>
        /// Minimum number of recipients required to match for email messaged to be correlated
        /// </summary>
        public System.Nullable<int> HashMinAddressCount
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("hashminaddresscount");
            }
            set
            {
                this.SetAttributeValue("hashminaddresscount", value);
                this.OnPropertyChanged("HashMinAddressCount");
            }
        }

        /// <summary>
        /// High contrast theme data for the organization.
        /// </summary>
        public string HighContrastThemeData
        {
            get
            {
                return this.GetAttributeValue<string>("highcontrastthemedata");
            }
            set
            {
                this.SetAttributeValue("highcontrastthemedata", value);
                this.OnPropertyChanged("HighContrastThemeData");
            }
        }

        /// <summary>
        /// Indicates whether incoming email sent by internal Microsoft Dynamics CRM users or queues should be tracked.
        /// </summary>
        public System.Nullable<bool> IgnoreInternalEmail
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ignoreinternalemail");
            }
            set
            {
                this.SetAttributeValue("ignoreinternalemail", value);
                this.OnPropertyChanged("IgnoreInternalEmail");
            }
        }

        /// <summary>
        /// Setting for the Async Service Mailbox Queue. Defines the retrieval batch size of exchange server.
        /// </summary>
        public System.Nullable<int> IncomingEmailExchangeEmailRetrievalBatchSize
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("incomingemailexchangeemailretrievalbatchsize");
            }
            set
            {
                this.SetAttributeValue("incomingemailexchangeemailretrievalbatchsize", value);
                this.OnPropertyChanged("IncomingEmailExchangeEmailRetrievalBatchSize");
            }
        }

        /// <summary>
        /// Initial version of the organization.
        /// </summary>
        public string InitialVersion
        {
            get
            {
                return this.GetAttributeValue<string>("initialversion");
            }
            set
            {
                this.SetAttributeValue("initialversion", value);
                this.OnPropertyChanged("InitialVersion");
            }
        }

        /// <summary>
        /// Unique identifier of the integration user for the organization.
        /// </summary>
        public System.Nullable<System.Guid> IntegrationUserId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("integrationuserid");
            }
            set
            {
                this.SetAttributeValue("integrationuserid", value);
                this.OnPropertyChanged("IntegrationUserId");
            }
        }

        /// <summary>
        /// Prefix to use for all invoice numbers throughout Microsoft Dynamics CRM.
        /// </summary>
        public string InvoicePrefix
        {
            get
            {
                return this.GetAttributeValue<string>("invoiceprefix");
            }
            set
            {
                this.SetAttributeValue("invoiceprefix", value);
                this.OnPropertyChanged("InvoicePrefix");
            }
        }

        /// <summary>
        /// Indicates whether the feature Action Card should be enabled for the organization.
        /// </summary>
        public System.Nullable<bool> IsActionCardEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isactioncardenabled");
            }
            set
            {
                this.SetAttributeValue("isactioncardenabled", value);
                this.OnPropertyChanged("IsActionCardEnabled");
            }
        }

        /// <summary>
        /// Indicates whether the feature Relationship Analytics should be enabled for the organization.
        /// </summary>
        public System.Nullable<bool> IsActivityAnalysisEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isactivityanalysisenabled");
            }
            set
            {
                this.SetAttributeValue("isactivityanalysisenabled", value);
                this.OnPropertyChanged("IsActivityAnalysisEnabled");
            }
        }

        /// <summary>
        /// Indicates whether loading of Microsoft Dynamics CRM in a browser window that does not have address, tool, and menu bars is enabled.
        /// </summary>
        public System.Nullable<bool> IsAppMode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isappmode");
            }
            set
            {
                this.SetAttributeValue("isappmode", value);
                this.OnPropertyChanged("IsAppMode");
            }
        }

        /// <summary>
        /// Enable or disable attachments sync for outlook and exchange.
        /// </summary>
        public System.Nullable<bool> IsAppointmentAttachmentSyncEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isappointmentattachmentsyncenabled");
            }
            set
            {
                this.SetAttributeValue("isappointmentattachmentsyncenabled", value);
                this.OnPropertyChanged("IsAppointmentAttachmentSyncEnabled");
            }
        }

        /// <summary>
        /// Enable or disable assigned tasks sync for outlook and exchange.
        /// </summary>
        public System.Nullable<bool> IsAssignedTasksSyncEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isassignedtaskssyncenabled");
            }
            set
            {
                this.SetAttributeValue("isassignedtaskssyncenabled", value);
                this.OnPropertyChanged("IsAssignedTasksSyncEnabled");
            }
        }

        /// <summary>
        /// Enable or disable auditing of changes.
        /// </summary>
        public System.Nullable<bool> IsAuditEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isauditenabled");
            }
            set
            {
                this.SetAttributeValue("isauditenabled", value);
                this.OnPropertyChanged("IsAuditEnabled");
            }
        }

        /// <summary>
        /// Indicates whether the feature Auto Capture should be enabled for the organization.
        /// </summary>
        public System.Nullable<bool> IsAutoDataCaptureEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isautodatacaptureenabled");
            }
            set
            {
                this.SetAttributeValue("isautodatacaptureenabled", value);
                this.OnPropertyChanged("IsAutoDataCaptureEnabled");
            }
        }

        /// <summary>
        /// Information on whether auto save is enabled.
        /// </summary>
        public System.Nullable<bool> IsAutoSaveEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isautosaveenabled");
            }
            set
            {
                this.SetAttributeValue("isautosaveenabled", value);
                this.OnPropertyChanged("IsAutoSaveEnabled");
            }
        }

        /// <summary>
        /// Information that specifies whether conflict detection for mobile client is enabled.
        /// </summary>
        public System.Nullable<bool> IsConflictDetectionEnabledForMobileClient
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isconflictdetectionenabledformobileclient");
            }
            set
            {
                this.SetAttributeValue("isconflictdetectionenabledformobileclient", value);
                this.OnPropertyChanged("IsConflictDetectionEnabledForMobileClient");
            }
        }

        /// <summary>
        /// Enable or disable mailing address sync for outlook and exchange.
        /// </summary>
        public System.Nullable<bool> IsContactMailingAddressSyncEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("iscontactmailingaddresssyncenabled");
            }
            set
            {
                this.SetAttributeValue("iscontactmailingaddresssyncenabled", value);
                this.OnPropertyChanged("IsContactMailingAddressSyncEnabled");
            }
        }

        /// <summary>
        /// Enable or disable country code selection.
        /// </summary>
        public System.Nullable<bool> IsDefaultCountryCodeCheckEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isdefaultcountrycodecheckenabled");
            }
            set
            {
                this.SetAttributeValue("isdefaultcountrycodecheckenabled", value);
                this.OnPropertyChanged("IsDefaultCountryCodeCheckEnabled");
            }
        }

        /// <summary>
        /// Enable Delegation Access content
        /// </summary>
        public System.Nullable<bool> IsDelegateAccessEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isdelegateaccessenabled");
            }
            set
            {
                this.SetAttributeValue("isdelegateaccessenabled", value);
                this.OnPropertyChanged("IsDelegateAccessEnabled");
            }
        }

        /// <summary>
        /// Indicates whether the feature Action Hub should be enabled for the organization.
        /// </summary>
        public System.Nullable<bool> IsDelveActionHubIntegrationEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isdelveactionhubintegrationenabled");
            }
            set
            {
                this.SetAttributeValue("isdelveactionhubintegrationenabled", value);
                this.OnPropertyChanged("IsDelveActionHubIntegrationEnabled");
            }
        }

        /// <summary>
        /// Information that specifies whether the organization is disabled.
        /// </summary>
        public System.Nullable<bool> IsDisabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isdisabled");
            }
        }

        /// <summary>
        /// Indicates whether duplicate detection of records is enabled.
        /// </summary>
        public System.Nullable<bool> IsDuplicateDetectionEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isduplicatedetectionenabled");
            }
            set
            {
                this.SetAttributeValue("isduplicatedetectionenabled", value);
                this.OnPropertyChanged("IsDuplicateDetectionEnabled");
            }
        }

        /// <summary>
        /// Indicates whether duplicate detection of records during import is enabled.
        /// </summary>
        public System.Nullable<bool> IsDuplicateDetectionEnabledForImport
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isduplicatedetectionenabledforimport");
            }
            set
            {
                this.SetAttributeValue("isduplicatedetectionenabledforimport", value);
                this.OnPropertyChanged("IsDuplicateDetectionEnabledForImport");
            }
        }

        /// <summary>
        /// Indicates whether duplicate detection of records during offline synchronization is enabled.
        /// </summary>
        public System.Nullable<bool> IsDuplicateDetectionEnabledForOfflineSync
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isduplicatedetectionenabledforofflinesync");
            }
            set
            {
                this.SetAttributeValue("isduplicatedetectionenabledforofflinesync", value);
                this.OnPropertyChanged("IsDuplicateDetectionEnabledForOfflineSync");
            }
        }

        /// <summary>
        /// Indicates whether duplicate detection during online create or update is enabled.
        /// </summary>
        public System.Nullable<bool> IsDuplicateDetectionEnabledForOnlineCreateUpdate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isduplicatedetectionenabledforonlinecreateupdate");
            }
            set
            {
                this.SetAttributeValue("isduplicatedetectionenabledforonlinecreateupdate", value);
                this.OnPropertyChanged("IsDuplicateDetectionEnabledForOnlineCreateUpdate");
            }
        }

        /// <summary>
        /// Allow tracking recipient activity on sent emails.
        /// </summary>
        public System.Nullable<bool> IsEmailMonitoringAllowed
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isemailmonitoringallowed");
            }
            set
            {
                this.SetAttributeValue("isemailmonitoringallowed", value);
                this.OnPropertyChanged("IsEmailMonitoringAllowed");
            }
        }

        /// <summary>
        /// Enable Email Server Profile content filtering
        /// </summary>
        public System.Nullable<bool> IsEmailServerProfileContentFilteringEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isemailserverprofilecontentfilteringenabled");
            }
            set
            {
                this.SetAttributeValue("isemailserverprofilecontentfilteringenabled", value);
                this.OnPropertyChanged("IsEmailServerProfileContentFilteringEnabled");
            }
        }

        /// <summary>
        /// Indicates whether appmodule is enabled for all roles
        /// </summary>
        public System.Nullable<bool> IsEnabledForAllRoles
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isenabledforallroles");
            }
            set
            {
                this.SetAttributeValue("isenabledforallroles", value);
                this.OnPropertyChanged("IsEnabledForAllRoles");
            }
        }

        /// <summary>
        /// Select whether data can be synchronized with an external search index.
        /// </summary>
        public System.Nullable<bool> IsExternalSearchIndexEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isexternalsearchindexenabled");
            }
            set
            {
                this.SetAttributeValue("isexternalsearchindexenabled", value);
                this.OnPropertyChanged("IsExternalSearchIndexEnabled");
            }
        }

        /// <summary>
        /// Indicates whether the fiscal period is displayed as the month number.
        /// </summary>
        public System.Nullable<bool> IsFiscalPeriodMonthBased
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isfiscalperiodmonthbased");
            }
            set
            {
                this.SetAttributeValue("isfiscalperiodmonthbased", value);
                this.OnPropertyChanged("IsFiscalPeriodMonthBased");
            }
        }

        /// <summary>
        /// Select whether folders should be automatically created on SharePoint.
        /// </summary>
        public System.Nullable<bool> IsFolderAutoCreatedonSP
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isfolderautocreatedonsp");
            }
            set
            {
                this.SetAttributeValue("isfolderautocreatedonsp", value);
                this.OnPropertyChanged("IsFolderAutoCreatedonSP");
            }
        }

        /// <summary>
        /// Enable or disable folder based tracking for Server Side Sync.
        /// </summary>
        public System.Nullable<bool> IsFolderBasedTrackingEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isfolderbasedtrackingenabled");
            }
            set
            {
                this.SetAttributeValue("isfolderbasedtrackingenabled", value);
                this.OnPropertyChanged("IsFolderBasedTrackingEnabled");
            }
        }

        /// <summary>
        /// Indicates whether full-text search for Quick Find entities should be enabled for the organization.
        /// </summary>
        public System.Nullable<bool> IsFullTextSearchEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isfulltextsearchenabled");
            }
            set
            {
                this.SetAttributeValue("isfulltextsearchenabled", value);
                this.OnPropertyChanged("IsFullTextSearchEnabled");
            }
        }

        /// <summary>
        /// Enable Hierarchical Security Model
        /// </summary>
        public System.Nullable<bool> IsHierarchicalSecurityModelEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ishierarchicalsecuritymodelenabled");
            }
            set
            {
                this.SetAttributeValue("ishierarchicalsecuritymodelenabled", value);
                this.OnPropertyChanged("IsHierarchicalSecurityModelEnabled");
            }
        }

        /// <summary>
        /// Enable or disable forced unlocking for Server Side Sync mailboxes.
        /// </summary>
        public System.Nullable<bool> IsMailboxForcedUnlockingEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ismailboxforcedunlockingenabled");
            }
            set
            {
                this.SetAttributeValue("ismailboxforcedunlockingenabled", value);
                this.OnPropertyChanged("IsMailboxForcedUnlockingEnabled");
            }
        }

        /// <summary>
        /// Enable or disable mailbox keep alive for Server Side Sync.
        /// </summary>
        public System.Nullable<bool> IsMailboxInactiveBackoffEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ismailboxinactivebackoffenabled");
            }
            set
            {
                this.SetAttributeValue("ismailboxinactivebackoffenabled", value);
                this.OnPropertyChanged("IsMailboxInactiveBackoffEnabled");
            }
        }

        /// <summary>
        /// Indicates whether the feature MobileOffline should be enabled for the organization.
        /// </summary>
        public System.Nullable<bool> IsMobileOfflineEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ismobileofflineenabled");
            }
            set
            {
                this.SetAttributeValue("ismobileofflineenabled", value);
                this.OnPropertyChanged("IsMobileOfflineEnabled");
            }
        }

        /// <summary>
        /// Indicates whether the feature OfficeGraph should be enabled for the organization.
        /// </summary>
        public System.Nullable<bool> IsOfficeGraphEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isofficegraphenabled");
            }
            set
            {
                this.SetAttributeValue("isofficegraphenabled", value);
                this.OnPropertyChanged("IsOfficeGraphEnabled");
            }
        }

        /// <summary>
        /// Indicates whether the feature One Drive should be enabled for the organization.
        /// </summary>
        public System.Nullable<bool> IsOneDriveEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isonedriveenabled");
            }
            set
            {
                this.SetAttributeValue("isonedriveenabled", value);
                this.OnPropertyChanged("IsOneDriveEnabled");
            }
        }

        /// <summary>
        /// Information on whether IM presence is enabled.
        /// </summary>
        public System.Nullable<bool> IsPresenceEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ispresenceenabled");
            }
            set
            {
                this.SetAttributeValue("ispresenceenabled", value);
                this.OnPropertyChanged("IsPresenceEnabled");
            }
        }

        /// <summary>
        /// Indicates whether the Preview feature for Action Card should be enabled for the organization.
        /// </summary>
        public System.Nullable<bool> IsPreviewEnabledForActionCard
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ispreviewenabledforactioncard");
            }
            set
            {
                this.SetAttributeValue("ispreviewenabledforactioncard", value);
                this.OnPropertyChanged("IsPreviewEnabledForActionCard");
            }
        }

        /// <summary>
        /// Indicates whether the feature Auto Capture should be enabled for the organization at Preview Settings.
        /// </summary>
        public System.Nullable<bool> IsPreviewForAutoCaptureEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ispreviewforautocaptureenabled");
            }
            set
            {
                this.SetAttributeValue("ispreviewforautocaptureenabled", value);
                this.OnPropertyChanged("IsPreviewForAutoCaptureEnabled");
            }
        }

        /// <summary>
        /// Is Preview For Email Monitoring Allowed.
        /// </summary>
        public System.Nullable<bool> IsPreviewForEmailMonitoringAllowed
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ispreviewforemailmonitoringallowed");
            }
            set
            {
                this.SetAttributeValue("ispreviewforemailmonitoringallowed", value);
                this.OnPropertyChanged("IsPreviewForEmailMonitoringAllowed");
            }
        }

        /// <summary>
        /// Enable sales order processing integration.
        /// </summary>
        public System.Nullable<bool> IsSOPIntegrationEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("issopintegrationenabled");
            }
            set
            {
                this.SetAttributeValue("issopintegrationenabled", value);
                this.OnPropertyChanged("IsSOPIntegrationEnabled");
            }
        }

        /// <summary>
        /// Enable or disable auditing of user access.
        /// </summary>
        public System.Nullable<bool> IsUserAccessAuditEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isuseraccessauditenabled");
            }
            set
            {
                this.SetAttributeValue("isuseraccessauditenabled", value);
                this.OnPropertyChanged("IsUserAccessAuditEnabled");
            }
        }

        /// <summary>
        /// Indicates whether loading of Microsoft Dynamics CRM in a browser window that does not have address, tool, and menu bars is enabled.
        /// </summary>
        [System.ObsoleteAttribute()]
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue ISVIntegrationCode
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("isvintegrationcode");
            }
            set
            {
                this.SetAttributeValue("isvintegrationcode", value);
                this.OnPropertyChanged("ISVIntegrationCode");
            }
        }

        /// <summary>
        /// Type the prefix to use for all knowledge articles in Microsoft Dynamics CRM.
        /// </summary>
        public string KaPrefix
        {
            get
            {
                return this.GetAttributeValue<string>("kaprefix");
            }
            set
            {
                this.SetAttributeValue("kaprefix", value);
                this.OnPropertyChanged("KaPrefix");
            }
        }

        /// <summary>
        /// Prefix to use for all articles in Microsoft Dynamics CRM.
        /// </summary>
        public string KbPrefix
        {
            get
            {
                return this.GetAttributeValue<string>("kbprefix");
            }
            set
            {
                this.SetAttributeValue("kbprefix", value);
                this.OnPropertyChanged("KbPrefix");
            }
        }

        /// <summary>
        /// XML string containing the Knowledge Management settings that are applied in Knowledge Management Wizard.
        /// </summary>
        public string KMSettings
        {
            get
            {
                return this.GetAttributeValue<string>("kmsettings");
            }
            set
            {
                this.SetAttributeValue("kmsettings", value);
                this.OnPropertyChanged("KMSettings");
            }
        }

        /// <summary>
        /// Preferred language for the organization.
        /// </summary>
        public System.Nullable<int> LanguageCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("languagecode");
            }
            set
            {
                this.SetAttributeValue("languagecode", value);
                this.OnPropertyChanged("LanguageCode");
            }
        }

        /// <summary>
        /// Unique identifier of the locale of the organization.
        /// </summary>
        public System.Nullable<int> LocaleId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("localeid");
            }
            set
            {
                this.SetAttributeValue("localeid", value);
                this.OnPropertyChanged("LocaleId");
            }
        }

        /// <summary>
        /// Information that specifies how the Long Date format is displayed in Microsoft Dynamics CRM.
        /// </summary>
        public System.Nullable<int> LongDateFormatCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("longdateformatcode");
            }
            set
            {
                this.SetAttributeValue("longdateformatcode", value);
                this.OnPropertyChanged("LongDateFormatCode");
            }
        }

        /// <summary>
        /// Lower Threshold For Mailbox Intermittent Issue.
        /// </summary>
        public System.Nullable<int> MailboxIntermittentIssueMinRange
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("mailboxintermittentissueminrange");
            }
            set
            {
                this.SetAttributeValue("mailboxintermittentissueminrange", value);
                this.OnPropertyChanged("MailboxIntermittentIssueMinRange");
            }
        }

        /// <summary>
        /// Lower Threshold For Mailbox Permanent Issue.
        /// </summary>
        public System.Nullable<int> MailboxPermanentIssueMinRange
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("mailboxpermanentissueminrange");
            }
            set
            {
                this.SetAttributeValue("mailboxpermanentissueminrange", value);
                this.OnPropertyChanged("MailboxPermanentIssueMinRange");
            }
        }

        /// <summary>
        /// Maximum number of days an appointment can last.
        /// </summary>
        public System.Nullable<int> MaxAppointmentDurationDays
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maxappointmentdurationdays");
            }
            set
            {
                this.SetAttributeValue("maxappointmentdurationdays", value);
                this.OnPropertyChanged("MaxAppointmentDurationDays");
            }
        }

        /// <summary>
        /// Maximum number of conditions allowed for mobile offline filters
        /// </summary>
        public System.Nullable<int> MaxConditionsForMobileOfflineFilters
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maxconditionsformobileofflinefilters");
            }
            set
            {
                this.SetAttributeValue("maxconditionsformobileofflinefilters", value);
                this.OnPropertyChanged("MaxConditionsForMobileOfflineFilters");
            }
        }

        /// <summary>
        /// Maximum depth for hierarchy security propagation.
        /// </summary>
        public System.Nullable<int> MaxDepthForHierarchicalSecurityModel
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maxdepthforhierarchicalsecuritymodel");
            }
            set
            {
                this.SetAttributeValue("maxdepthforhierarchicalsecuritymodel", value);
                this.OnPropertyChanged("MaxDepthForHierarchicalSecurityModel");
            }
        }

        /// <summary>
        /// Maximum number of Folder Based Tracking mappings user can add
        /// </summary>
        public System.Nullable<int> MaxFolderBasedTrackingMappings
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maxfolderbasedtrackingmappings");
            }
            set
            {
                this.SetAttributeValue("maxfolderbasedtrackingmappings", value);
                this.OnPropertyChanged("MaxFolderBasedTrackingMappings");
            }
        }

        /// <summary>
        /// Maximum number of active business process flows allowed per entity
        /// </summary>
        public System.Nullable<int> MaximumActiveBusinessProcessFlowsAllowedPerEntity
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maximumactivebusinessprocessflowsallowedperentity");
            }
            set
            {
                this.SetAttributeValue("maximumactivebusinessprocessflowsallowedperentity", value);
                this.OnPropertyChanged("MaximumActiveBusinessProcessFlowsAllowedPerEntity");
            }
        }

        /// <summary>
        /// Restrict the maximum number of product properties for a product family/bundle
        /// </summary>
        public System.Nullable<int> MaximumDynamicPropertiesAllowed
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maximumdynamicpropertiesallowed");
            }
            set
            {
                this.SetAttributeValue("maximumdynamicpropertiesallowed", value);
                this.OnPropertyChanged("MaximumDynamicPropertiesAllowed");
            }
        }

        /// <summary>
        /// Maximum number of active SLA allowed per entity in online
        /// </summary>
        public System.Nullable<int> MaximumEntitiesWithActiveSLA
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maximumentitieswithactivesla");
            }
            set
            {
                this.SetAttributeValue("maximumentitieswithactivesla", value);
                this.OnPropertyChanged("MaximumEntitiesWithActiveSLA");
            }
        }

        /// <summary>
        /// Maximum number of SLA KPI per active SLA allowed for entity in online
        /// </summary>
        public System.Nullable<int> MaximumSLAKPIPerEntityWithActiveSLA
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maximumslakpiperentitywithactivesla");
            }
            set
            {
                this.SetAttributeValue("maximumslakpiperentitywithactivesla", value);
                this.OnPropertyChanged("MaximumSLAKPIPerEntityWithActiveSLA");
            }
        }

        /// <summary>
        /// Maximum tracking number before recycling takes place.
        /// </summary>
        public System.Nullable<int> MaximumTrackingNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maximumtrackingnumber");
            }
            set
            {
                this.SetAttributeValue("maximumtrackingnumber", value);
                this.OnPropertyChanged("MaximumTrackingNumber");
            }
        }

        /// <summary>
        /// Restrict the maximum no of items in a bundle
        /// </summary>
        public System.Nullable<int> MaxProductsInBundle
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maxproductsinbundle");
            }
            set
            {
                this.SetAttributeValue("maxproductsinbundle", value);
                this.OnPropertyChanged("MaxProductsInBundle");
            }
        }

        /// <summary>
        /// Maximum number of records that will be exported to a static Microsoft Office Excel worksheet when exporting from the grid.
        /// </summary>
        public System.Nullable<int> MaxRecordsForExportToExcel
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maxrecordsforexporttoexcel");
            }
            set
            {
                this.SetAttributeValue("maxrecordsforexporttoexcel", value);
                this.OnPropertyChanged("MaxRecordsForExportToExcel");
            }
        }

        /// <summary>
        /// Maximum number of lookup and picklist records that can be selected by user for filtering.
        /// </summary>
        public System.Nullable<int> MaxRecordsForLookupFilters
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maxrecordsforlookupfilters");
            }
            set
            {
                this.SetAttributeValue("maxrecordsforlookupfilters", value);
                this.OnPropertyChanged("MaxRecordsForLookupFilters");
            }
        }

        /// <summary>
        /// The maximum version of IE to run browser emulation for in Outlook client
        /// </summary>
        public System.Nullable<int> MaxSupportedInternetExplorerVersion
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maxsupportedinternetexplorerversion");
            }
        }

        /// <summary>
        /// Maximum allowed size of an attachment.
        /// </summary>
        public System.Nullable<int> MaxUploadFileSize
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maxuploadfilesize");
            }
            set
            {
                this.SetAttributeValue("maxuploadfilesize", value);
                this.OnPropertyChanged("MaxUploadFileSize");
            }
        }

        /// <summary>
        /// Maximum number of mailboxes that can be toggled for verbose logging
        /// </summary>
        public System.Nullable<int> MaxVerboseLoggingMailbox
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maxverboseloggingmailbox");
            }
        }

        /// <summary>
        /// Maximum number of sync cycles for which verbose logging will be enabled by default
        /// </summary>
        public System.Nullable<int> MaxVerboseLoggingSyncCycles
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("maxverboseloggingsynccycles");
            }
        }

        /// <summary>
        /// Normal polling frequency used for address book synchronization in Microsoft Office Outlook.
        /// </summary>
        public System.Nullable<int> MinAddressBookSyncInterval
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("minaddressbooksyncinterval");
            }
            set
            {
                this.SetAttributeValue("minaddressbooksyncinterval", value);
                this.OnPropertyChanged("MinAddressBookSyncInterval");
            }
        }

        /// <summary>
        /// Normal polling frequency used for background offline synchronization in Microsoft Office Outlook.
        /// </summary>
        public System.Nullable<int> MinOfflineSyncInterval
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("minofflinesyncinterval");
            }
            set
            {
                this.SetAttributeValue("minofflinesyncinterval", value);
                this.OnPropertyChanged("MinOfflineSyncInterval");
            }
        }

        /// <summary>
        /// Minimum allowed time between scheduled Outlook synchronizations.
        /// </summary>
        public System.Nullable<int> MinOutlookSyncInterval
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("minoutlooksyncinterval");
            }
            set
            {
                this.SetAttributeValue("minoutlooksyncinterval", value);
                this.OnPropertyChanged("MinOutlookSyncInterval");
            }
        }

        /// <summary>
        /// Minimum number of user license required for mobile offline service by production/preview organization
        /// </summary>
        public System.Nullable<int> MobileOfflineMinLicenseProd
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("mobileofflineminlicenseprod");
            }
        }

        /// <summary>
        /// Minimum number of user license required for mobile offline service by trial organization
        /// </summary>
        public System.Nullable<int> MobileOfflineMinLicenseTrial
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("mobileofflineminlicensetrial");
            }
        }

        /// <summary>
        /// Sync interval for mobile offline.
        /// </summary>
        public System.Nullable<int> MobileOfflineSyncInterval
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("mobileofflinesyncinterval");
            }
            set
            {
                this.SetAttributeValue("mobileofflinesyncinterval", value);
                this.OnPropertyChanged("MobileOfflineSyncInterval");
            }
        }

        /// <summary>
        /// Unique identifier of the user who last modified the organization.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Date and time when the organization was last modified.
        /// </summary>
        public System.Nullable<System.DateTime> ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who last modified the organization.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.EntityReference ModifiedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.EntityReference>("modifiedonbehalfby");
            }
        }

        /// <summary>
        /// Name of the organization. The name is set when Microsoft CRM is installed and should not be changed.
        /// </summary>
        public string Name
        {
            get
            {
                return this.GetAttributeValue<string>("name");
            }
            set
            {
                this.SetAttributeValue("name", value);
                this.OnPropertyChanged("Name");
            }
        }

        /// <summary>
        /// Information that specifies how negative currency numbers are displayed throughout Microsoft Dynamics CRM.
        /// </summary>
        public System.Nullable<int> NegativeCurrencyFormatCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("negativecurrencyformatcode");
            }
            set
            {
                this.SetAttributeValue("negativecurrencyformatcode", value);
                this.OnPropertyChanged("NegativeCurrencyFormatCode");
            }
        }

        /// <summary>
        /// Information that specifies how negative numbers are displayed throughout Microsoft CRM.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue NegativeFormatCode
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("negativeformatcode");
            }
            set
            {
                this.SetAttributeValue("negativeformatcode", value);
                this.OnPropertyChanged("NegativeFormatCode");
            }
        }

        /// <summary>
        /// Next token to be placed on the subject line of an email message.
        /// </summary>
        public System.Nullable<int> NextTrackingNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("nexttrackingnumber");
            }
            set
            {
                this.SetAttributeValue("nexttrackingnumber", value);
                this.OnPropertyChanged("NextTrackingNumber");
            }
        }

        /// <summary>
        /// Indicates whether mailbox owners will be notified of email server profile level alerts.
        /// </summary>
        public System.Nullable<bool> NotifyMailboxOwnerOfEmailServerLevelAlerts
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("notifymailboxownerofemailserverlevelalerts");
            }
            set
            {
                this.SetAttributeValue("notifymailboxownerofemailserverlevelalerts", value);
                this.OnPropertyChanged("NotifyMailboxOwnerOfEmailServerLevelAlerts");
            }
        }

        /// <summary>
        /// Specification of how numbers are displayed throughout Microsoft CRM.
        /// </summary>
        public string NumberFormat
        {
            get
            {
                return this.GetAttributeValue<string>("numberformat");
            }
            set
            {
                this.SetAttributeValue("numberformat", value);
                this.OnPropertyChanged("NumberFormat");
            }
        }

        /// <summary>
        /// Specifies how numbers are grouped in Microsoft Dynamics CRM.
        /// </summary>
        public string NumberGroupFormat
        {
            get
            {
                return this.GetAttributeValue<string>("numbergroupformat");
            }
            set
            {
                this.SetAttributeValue("numbergroupformat", value);
                this.OnPropertyChanged("NumberGroupFormat");
            }
        }

        /// <summary>
        /// Symbol used for number separation in Microsoft Dynamics CRM.
        /// </summary>
        public string NumberSeparator
        {
            get
            {
                return this.GetAttributeValue<string>("numberseparator");
            }
            set
            {
                this.SetAttributeValue("numberseparator", value);
                this.OnPropertyChanged("NumberSeparator");
            }
        }

        /// <summary>
        /// Indicates whether the Office Apps auto deployment is enabled for the organization.
        /// </summary>
        public System.Nullable<bool> OfficeAppsAutoDeploymentEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("officeappsautodeploymentenabled");
            }
            set
            {
                this.SetAttributeValue("officeappsautodeploymentenabled", value);
                this.OnPropertyChanged("OfficeAppsAutoDeploymentEnabled");
            }
        }

        /// <summary>
        /// The url to open the Delve for the organization.
        /// </summary>
        public string OfficeGraphDelveUrl
        {
            get
            {
                return this.GetAttributeValue<string>("officegraphdelveurl");
            }
            set
            {
                this.SetAttributeValue("officegraphdelveurl", value);
                this.OnPropertyChanged("OfficeGraphDelveUrl");
            }
        }

        /// <summary>
        /// Enable OOB pricing calculation logic for Opportunity, Quote, Order and Invoice entities.
        /// </summary>
        public System.Nullable<bool> OOBPriceCalculationEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("oobpricecalculationenabled");
            }
            set
            {
                this.SetAttributeValue("oobpricecalculationenabled", value);
                this.OnPropertyChanged("OOBPriceCalculationEnabled");
            }
        }

        /// <summary>
        /// Prefix to use for all orders throughout Microsoft Dynamics CRM.
        /// </summary>
        public string OrderPrefix
        {
            get
            {
                return this.GetAttributeValue<string>("orderprefix");
            }
            set
            {
                this.SetAttributeValue("orderprefix", value);
                this.OnPropertyChanged("OrderPrefix");
            }
        }

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        public System.Nullable<System.Guid> OrganizationId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("organizationid");
            }
        }

        public override System.Guid Id
        {
            get
            {
                return base.Id;
            }
            set
            {
                base.Id = value;
            }
        }

        /// <summary>
        /// Organization settings stored in Organization Database.
        /// </summary>
        public string OrgDbOrgSettings
        {
            get
            {
                return this.GetAttributeValue<string>("orgdborgsettings");
            }
            set
            {
                this.SetAttributeValue("orgdborgsettings", value);
                this.OnPropertyChanged("OrgDbOrgSettings");
            }
        }

        /// <summary>
        /// Select whether to turn on OrgInsights for the organization.
        /// </summary>
        public System.Nullable<bool> OrgInsightsEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("orginsightsenabled");
            }
            set
            {
                this.SetAttributeValue("orginsightsenabled", value);
                this.OnPropertyChanged("OrgInsightsEnabled");
            }
        }

        /// <summary>
        /// Prefix used for parsed table columns.
        /// </summary>
        public string ParsedTableColumnPrefix
        {
            get
            {
                return this.GetAttributeValue<string>("parsedtablecolumnprefix");
            }
        }

        /// <summary>
        /// Prefix used for parsed tables.
        /// </summary>
        public string ParsedTablePrefix
        {
            get
            {
                return this.GetAttributeValue<string>("parsedtableprefix");
            }
        }

        /// <summary>
        /// Specifies the maximum number of months in past for which the recurring activities can be created.
        /// </summary>
        public System.Nullable<int> PastExpansionWindow
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("pastexpansionwindow");
            }
            set
            {
                this.SetAttributeValue("pastexpansionwindow", value);
                this.OnPropertyChanged("PastExpansionWindow");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public string Picture
        {
            get
            {
                return this.GetAttributeValue<string>("picture");
            }
            set
            {
                this.SetAttributeValue("picture", value);
                this.OnPropertyChanged("Picture");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        public System.Nullable<int> PinpointLanguageCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("pinpointlanguagecode");
            }
            set
            {
                this.SetAttributeValue("pinpointlanguagecode", value);
                this.OnPropertyChanged("PinpointLanguageCode");
            }
        }

        /// <summary>
        /// Plug-in Trace Log Setting for the Organization.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue PluginTraceLogSetting
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("plugintracelogsetting");
            }
            set
            {
                this.SetAttributeValue("plugintracelogsetting", value);
                this.OnPropertyChanged("PluginTraceLogSetting");
            }
        }

        /// <summary>
        /// PM designator to use throughout Microsoft Dynamics CRM.
        /// </summary>
        public string PMDesignator
        {
            get
            {
                return this.GetAttributeValue<string>("pmdesignator");
            }
            set
            {
                this.SetAttributeValue("pmdesignator", value);
                this.OnPropertyChanged("PMDesignator");
            }
        }

        /// <summary>
        /// Indicates whether the Power BI feature should be enabled for the organization.
        /// </summary>
        public System.Nullable<bool> PowerBiFeatureEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("powerbifeatureenabled");
            }
            set
            {
                this.SetAttributeValue("powerbifeatureenabled", value);
                this.OnPropertyChanged("PowerBiFeatureEnabled");
            }
        }

        /// <summary>
        /// Number of decimal places that can be used for prices.
        /// </summary>
        public System.Nullable<int> PricingDecimalPrecision
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("pricingdecimalprecision");
            }
            set
            {
                this.SetAttributeValue("pricingdecimalprecision", value);
                this.OnPropertyChanged("PricingDecimalPrecision");
            }
        }

        /// <summary>
        /// Privacy Statement URL
        /// </summary>
        public string PrivacyStatementUrl
        {
            get
            {
                return this.GetAttributeValue<string>("privacystatementurl");
            }
            set
            {
                this.SetAttributeValue("privacystatementurl", value);
                this.OnPropertyChanged("PrivacyStatementUrl");
            }
        }

        /// <summary>
        /// Unique identifier of the default privilege for users in the organization.
        /// </summary>
        public System.Nullable<System.Guid> PrivilegeUserGroupId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("privilegeusergroupid");
            }
            set
            {
                this.SetAttributeValue("privilegeusergroupid", value);
                this.OnPropertyChanged("PrivilegeUserGroupId");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public System.Nullable<System.Guid> PrivReportingGroupId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("privreportinggroupid");
            }
            set
            {
                this.SetAttributeValue("privreportinggroupid", value);
                this.OnPropertyChanged("PrivReportingGroupId");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public string PrivReportingGroupName
        {
            get
            {
                return this.GetAttributeValue<string>("privreportinggroupname");
            }
            set
            {
                this.SetAttributeValue("privreportinggroupname", value);
                this.OnPropertyChanged("PrivReportingGroupName");
            }
        }

        /// <summary>
        /// Select whether to turn on product recommendations for the organization.
        /// </summary>
        public System.Nullable<bool> ProductRecommendationsEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("productrecommendationsenabled");
            }
            set
            {
                this.SetAttributeValue("productrecommendationsenabled", value);
                this.OnPropertyChanged("ProductRecommendationsEnabled");
            }
        }

        /// <summary>
        /// Indicates whether a quick find record limit should be enabled for this organization (allows for faster Quick Find queries but prevents overly broad searches).
        /// </summary>
        public System.Nullable<bool> QuickFindRecordLimitEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("quickfindrecordlimitenabled");
            }
            set
            {
                this.SetAttributeValue("quickfindrecordlimitenabled", value);
                this.OnPropertyChanged("QuickFindRecordLimitEnabled");
            }
        }

        /// <summary>
        /// Prefix to use for all quotes throughout Microsoft Dynamics CRM.
        /// </summary>
        public string QuotePrefix
        {
            get
            {
                return this.GetAttributeValue<string>("quoteprefix");
            }
            set
            {
                this.SetAttributeValue("quoteprefix", value);
                this.OnPropertyChanged("QuotePrefix");
            }
        }

        /// <summary>
        /// Specifies the default value for number of occurrences field in the recurrence dialog.
        /// </summary>
        public System.Nullable<int> RecurrenceDefaultNumberOfOccurrences
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("recurrencedefaultnumberofoccurrences");
            }
            set
            {
                this.SetAttributeValue("recurrencedefaultnumberofoccurrences", value);
                this.OnPropertyChanged("RecurrenceDefaultNumberOfOccurrences");
            }
        }

        /// <summary>
        /// Specifies the interval (in seconds) for pausing expansion job.
        /// </summary>
        public System.Nullable<int> RecurrenceExpansionJobBatchInterval
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("recurrenceexpansionjobbatchinterval");
            }
            set
            {
                this.SetAttributeValue("recurrenceexpansionjobbatchinterval", value);
                this.OnPropertyChanged("RecurrenceExpansionJobBatchInterval");
            }
        }

        /// <summary>
        /// Specifies the value for number of instances created in on demand job in one shot.
        /// </summary>
        public System.Nullable<int> RecurrenceExpansionJobBatchSize
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("recurrenceexpansionjobbatchsize");
            }
            set
            {
                this.SetAttributeValue("recurrenceexpansionjobbatchsize", value);
                this.OnPropertyChanged("RecurrenceExpansionJobBatchSize");
            }
        }

        /// <summary>
        /// Specifies the maximum number of instances to be created synchronously after creating a recurring appointment.
        /// </summary>
        public System.Nullable<int> RecurrenceExpansionSynchCreateMax
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("recurrenceexpansionsynchcreatemax");
            }
            set
            {
                this.SetAttributeValue("recurrenceexpansionsynchcreatemax", value);
                this.OnPropertyChanged("RecurrenceExpansionSynchCreateMax");
            }
        }

        /// <summary>
        /// XML string that defines the navigation structure for the application. This is the site map from the previously upgraded build and is used in a 3-way merge during upgrade.
        /// </summary>
        [System.ObsoleteAttribute()]
        public string ReferenceSiteMapXml
        {
            get
            {
                return this.GetAttributeValue<string>("referencesitemapxml");
            }
            set
            {
                this.SetAttributeValue("referencesitemapxml", value);
                this.OnPropertyChanged("ReferenceSiteMapXml");
            }
        }

        /// <summary>
        /// Flag to render the body of email in the Web form in an IFRAME with the security='restricted' attribute set. This is additional security but can cause a credentials prompt.
        /// </summary>
        public System.Nullable<bool> RenderSecureIFrameForEmail
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("rendersecureiframeforemail");
            }
            set
            {
                this.SetAttributeValue("rendersecureiframeforemail", value);
                this.OnPropertyChanged("RenderSecureIFrameForEmail");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public System.Nullable<System.Guid> ReportingGroupId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("reportinggroupid");
            }
            set
            {
                this.SetAttributeValue("reportinggroupid", value);
                this.OnPropertyChanged("ReportingGroupId");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public string ReportingGroupName
        {
            get
            {
                return this.GetAttributeValue<string>("reportinggroupname");
            }
            set
            {
                this.SetAttributeValue("reportinggroupname", value);
                this.OnPropertyChanged("ReportingGroupName");
            }
        }

        /// <summary>
        /// Picklist for selecting the organization preference for reporting scripting errors.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue ReportScriptErrors
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("reportscripterrors");
            }
            set
            {
                this.SetAttributeValue("reportscripterrors", value);
                this.OnPropertyChanged("ReportScriptErrors");
            }
        }

        /// <summary>
        /// Indicates whether Send As Other User privilege is enabled.
        /// </summary>
        public System.Nullable<bool> RequireApprovalForQueueEmail
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("requireapprovalforqueueemail");
            }
            set
            {
                this.SetAttributeValue("requireapprovalforqueueemail", value);
                this.OnPropertyChanged("RequireApprovalForQueueEmail");
            }
        }

        /// <summary>
        /// Indicates whether Send As Other User privilege is enabled.
        /// </summary>
        public System.Nullable<bool> RequireApprovalForUserEmail
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("requireapprovalforuseremail");
            }
            set
            {
                this.SetAttributeValue("requireapprovalforuseremail", value);
                this.OnPropertyChanged("RequireApprovalForUserEmail");
            }
        }

        /// <summary>
        /// Flag to restrict Update on incident.
        /// </summary>
        public System.Nullable<bool> RestrictStatusUpdate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("restrictstatusupdate");
            }
            set
            {
                this.SetAttributeValue("restrictstatusupdate", value);
                this.OnPropertyChanged("RestrictStatusUpdate");
            }
        }

        /// <summary>
        /// Error status of Relationship Insights provisioning.
        /// </summary>
        public System.Nullable<int> RiErrorStatus
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("rierrorstatus");
            }
            set
            {
                this.SetAttributeValue("rierrorstatus", value);
                this.OnPropertyChanged("RiErrorStatus");
            }
        }

        /// <summary>
        /// Unique identifier of the sample data import job.
        /// </summary>
        public System.Nullable<System.Guid> SampleDataImportId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("sampledataimportid");
            }
            set
            {
                this.SetAttributeValue("sampledataimportid", value);
                this.OnPropertyChanged("SampleDataImportId");
            }
        }

        /// <summary>
        /// Prefix used for custom entities and attributes.
        /// </summary>
        public string SchemaNamePrefix
        {
            get
            {
                return this.GetAttributeValue<string>("schemanameprefix");
            }
            set
            {
                this.SetAttributeValue("schemanameprefix", value);
                this.OnPropertyChanged("SchemaNamePrefix");
            }
        }

        /// <summary>
        /// Indicates which SharePoint deployment type is configured for Server to Server. (Online or On-Premises)
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue SharePointDeploymentType
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("sharepointdeploymenttype");
            }
            set
            {
                this.SetAttributeValue("sharepointdeploymenttype", value);
                this.OnPropertyChanged("SharePointDeploymentType");
            }
        }

        /// <summary>
        /// Information that specifies whether to share to previous owner on assign.
        /// </summary>
        public System.Nullable<bool> ShareToPreviousOwnerOnAssign
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("sharetopreviousowneronassign");
            }
            set
            {
                this.SetAttributeValue("sharetopreviousowneronassign", value);
                this.OnPropertyChanged("ShareToPreviousOwnerOnAssign");
            }
        }

        /// <summary>
        /// Select whether to display a KB article deprecation notification to the user.
        /// </summary>
        public System.Nullable<bool> ShowKBArticleDeprecationNotification
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("showkbarticledeprecationnotification");
            }
            set
            {
                this.SetAttributeValue("showkbarticledeprecationnotification", value);
                this.OnPropertyChanged("ShowKBArticleDeprecationNotification");
            }
        }

        /// <summary>
        /// Information that specifies whether to display the week number in calendar displays throughout Microsoft CRM.
        /// </summary>
        public System.Nullable<bool> ShowWeekNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("showweeknumber");
            }
            set
            {
                this.SetAttributeValue("showweeknumber", value);
                this.OnPropertyChanged("ShowWeekNumber");
            }
        }

        /// <summary>
        /// CRM for Outlook Download URL
        /// </summary>
        public string SignupOutlookDownloadFWLink
        {
            get
            {
                return this.GetAttributeValue<string>("signupoutlookdownloadfwlink");
            }
            set
            {
                this.SetAttributeValue("signupoutlookdownloadfwlink", value);
                this.OnPropertyChanged("SignupOutlookDownloadFWLink");
            }
        }

        /// <summary>
        /// XML string that defines the navigation structure for the application.
        /// </summary>
        [System.ObsoleteAttribute()]
        public string SiteMapXml
        {
            get
            {
                return this.GetAttributeValue<string>("sitemapxml");
            }
            set
            {
                this.SetAttributeValue("sitemapxml", value);
                this.OnPropertyChanged("SiteMapXml");
            }
        }

        /// <summary>
        /// Contains the on hold case status values.
        /// </summary>
        public string SlaPauseStates
        {
            get
            {
                return this.GetAttributeValue<string>("slapausestates");
            }
            set
            {
                this.SetAttributeValue("slapausestates", value);
                this.OnPropertyChanged("SlaPauseStates");
            }
        }

        /// <summary>
        /// Flag for whether the organization is using Social Insights.
        /// </summary>
        public System.Nullable<bool> SocialInsightsEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("socialinsightsenabled");
            }
            set
            {
                this.SetAttributeValue("socialinsightsenabled", value);
                this.OnPropertyChanged("SocialInsightsEnabled");
            }
        }

        /// <summary>
        /// Identifier for the Social Insights instance for the organization.
        /// </summary>
        public string SocialInsightsInstance
        {
            get
            {
                return this.GetAttributeValue<string>("socialinsightsinstance");
            }
            set
            {
                this.SetAttributeValue("socialinsightsinstance", value);
                this.OnPropertyChanged("SocialInsightsInstance");
            }
        }

        /// <summary>
        /// Flag for whether the organization has accepted the Social Insights terms of use.
        /// </summary>
        public System.Nullable<bool> SocialInsightsTermsAccepted
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("socialinsightstermsaccepted");
            }
            set
            {
                this.SetAttributeValue("socialinsightstermsaccepted", value);
                this.OnPropertyChanged("SocialInsightsTermsAccepted");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public System.Nullable<int> SortId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("sortid");
            }
            set
            {
                this.SetAttributeValue("sortid", value);
                this.OnPropertyChanged("SortId");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public System.Nullable<System.Guid> SqlAccessGroupId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("sqlaccessgroupid");
            }
            set
            {
                this.SetAttributeValue("sqlaccessgroupid", value);
                this.OnPropertyChanged("SqlAccessGroupId");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public string SqlAccessGroupName
        {
            get
            {
                return this.GetAttributeValue<string>("sqlaccessgroupname");
            }
            set
            {
                this.SetAttributeValue("sqlaccessgroupname", value);
                this.OnPropertyChanged("SqlAccessGroupName");
            }
        }

        /// <summary>
        /// Setting for SQM data collection, 0 no, 1 yes enabled
        /// </summary>
        public System.Nullable<bool> SQMEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("sqmenabled");
            }
            set
            {
                this.SetAttributeValue("sqmenabled", value);
                this.OnPropertyChanged("SQMEnabled");
            }
        }

        /// <summary>
        /// Unique identifier of the support user for the organization.
        /// </summary>
        public System.Nullable<System.Guid> SupportUserId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("supportuserid");
            }
            set
            {
                this.SetAttributeValue("supportuserid", value);
                this.OnPropertyChanged("SupportUserId");
            }
        }

        /// <summary>
        /// Indicates whether SLA is suppressed.
        /// </summary>
        public System.Nullable<bool> SuppressSLA
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("suppresssla");
            }
            set
            {
                this.SetAttributeValue("suppresssla", value);
                this.OnPropertyChanged("SuppressSLA");
            }
        }

        /// <summary>
        /// Unique identifier of the system user for the organization.
        /// </summary>
        public System.Nullable<System.Guid> SystemUserId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("systemuserid");
            }
            set
            {
                this.SetAttributeValue("systemuserid", value);
                this.OnPropertyChanged("SystemUserId");
            }
        }

        /// <summary>
        /// Maximum number of aggressive polling cycles executed for email auto-tagging when a new email is received.
        /// </summary>
        public System.Nullable<int> TagMaxAggressiveCycles
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("tagmaxaggressivecycles");
            }
            set
            {
                this.SetAttributeValue("tagmaxaggressivecycles", value);
                this.OnPropertyChanged("TagMaxAggressiveCycles");
            }
        }

        /// <summary>
        /// Normal polling frequency used for email receive auto-tagging in outlook.
        /// </summary>
        public System.Nullable<int> TagPollingPeriod
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("tagpollingperiod");
            }
            set
            {
                this.SetAttributeValue("tagpollingperiod", value);
                this.OnPropertyChanged("TagPollingPeriod");
            }
        }

        /// <summary>
        /// Select whether to turn on task flows for the organization.
        /// </summary>
        public System.Nullable<bool> TaskBasedFlowEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("taskbasedflowenabled");
            }
            set
            {
                this.SetAttributeValue("taskbasedflowenabled", value);
                this.OnPropertyChanged("TaskBasedFlowEnabled");
            }
        }

        /// <summary>
        /// Select whether to turn on text analytics for the organization.
        /// </summary>
        public System.Nullable<bool> TextAnalyticsEnabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("textanalyticsenabled");
            }
            set
            {
                this.SetAttributeValue("textanalyticsenabled", value);
                this.OnPropertyChanged("TextAnalyticsEnabled");
            }
        }

        /// <summary>
        /// Information that specifies how the time is displayed throughout Microsoft CRM.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue TimeFormatCode
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("timeformatcode");
            }
            set
            {
                this.SetAttributeValue("timeformatcode", value);
                this.OnPropertyChanged("TimeFormatCode");
            }
        }

        /// <summary>
        /// Text for how time is displayed in Microsoft Dynamics CRM.
        /// </summary>
        public string TimeFormatString
        {
            get
            {
                return this.GetAttributeValue<string>("timeformatstring");
            }
            set
            {
                this.SetAttributeValue("timeformatstring", value);
                this.OnPropertyChanged("TimeFormatString");
            }
        }

        /// <summary>
        /// Text for how the time separator is displayed throughout Microsoft Dynamics CRM.
        /// </summary>
        public string TimeSeparator
        {
            get
            {
                return this.GetAttributeValue<string>("timeseparator");
            }
            set
            {
                this.SetAttributeValue("timeseparator", value);
                this.OnPropertyChanged("TimeSeparator");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        public System.Nullable<int> TimeZoneRuleVersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }
            set
            {
                this.SetAttributeValue("timezoneruleversionnumber", value);
                this.OnPropertyChanged("TimeZoneRuleVersionNumber");
            }
        }

        /// <summary>
        /// Duration used for token expiration.
        /// </summary>
        public System.Nullable<int> TokenExpiry
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("tokenexpiry");
            }
            set
            {
                this.SetAttributeValue("tokenexpiry", value);
                this.OnPropertyChanged("TokenExpiry");
            }
        }

        /// <summary>
        /// Token key.
        /// </summary>
        public string TokenKey
        {
            get
            {
                return this.GetAttributeValue<string>("tokenkey");
            }
            set
            {
                this.SetAttributeValue("tokenkey", value);
                this.OnPropertyChanged("TokenKey");
            }
        }

        /// <summary>
        /// History list of tracking token prefixes.
        /// </summary>
        public string TrackingPrefix
        {
            get
            {
                return this.GetAttributeValue<string>("trackingprefix");
            }
            set
            {
                this.SetAttributeValue("trackingprefix", value);
                this.OnPropertyChanged("TrackingPrefix");
            }
        }

        /// <summary>
        /// Base number used to provide separate tracking token identifiers to users belonging to different deployments.
        /// </summary>
        public System.Nullable<int> TrackingTokenIdBase
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("trackingtokenidbase");
            }
            set
            {
                this.SetAttributeValue("trackingtokenidbase", value);
                this.OnPropertyChanged("TrackingTokenIdBase");
            }
        }

        /// <summary>
        /// Number of digits used to represent a tracking token identifier.
        /// </summary>
        public System.Nullable<int> TrackingTokenIdDigits
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("trackingtokeniddigits");
            }
            set
            {
                this.SetAttributeValue("trackingtokeniddigits", value);
                this.OnPropertyChanged("TrackingTokenIdDigits");
            }
        }

        /// <summary>
        /// Number of characters appended to invoice, quote, and order numbers.
        /// </summary>
        public System.Nullable<int> UniqueSpecifierLength
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("uniquespecifierlength");
            }
            set
            {
                this.SetAttributeValue("uniquespecifierlength", value);
                this.OnPropertyChanged("UniqueSpecifierLength");
            }
        }

        /// <summary>
        /// Indicates whether email address should be unresolved if multiple matches are found
        /// </summary>
        public System.Nullable<bool> UnresolveEmailAddressIfMultipleMatch
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("unresolveemailaddressifmultiplematch");
            }
            set
            {
                this.SetAttributeValue("unresolveemailaddressifmultiplematch", value);
                this.OnPropertyChanged("UnresolveEmailAddressIfMultipleMatch");
            }
        }

        /// <summary>
        /// Flag indicates whether to Use Inbuilt Rule For DefaultPricelist.
        /// </summary>
        public System.Nullable<bool> UseInbuiltRuleForDefaultPricelistSelection
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("useinbuiltrulefordefaultpricelistselection");
            }
            set
            {
                this.SetAttributeValue("useinbuiltrulefordefaultpricelistselection", value);
                this.OnPropertyChanged("UseInbuiltRuleForDefaultPricelistSelection");
            }
        }

        /// <summary>
        /// Select whether to use legacy form rendering.
        /// </summary>
        public System.Nullable<bool> UseLegacyRendering
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("uselegacyrendering");
            }
            set
            {
                this.SetAttributeValue("uselegacyrendering", value);
                this.OnPropertyChanged("UseLegacyRendering");
            }
        }

        /// <summary>
        /// Use position hierarchy
        /// </summary>
        public System.Nullable<bool> UsePositionHierarchy
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("usepositionhierarchy");
            }
            set
            {
                this.SetAttributeValue("usepositionhierarchy", value);
                this.OnPropertyChanged("UsePositionHierarchy");
            }
        }

        /// <summary>
        /// The interval at which user access is checked for auditing.
        /// </summary>
        public System.Nullable<int> UserAccessAuditingInterval
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("useraccessauditinginterval");
            }
            set
            {
                this.SetAttributeValue("useraccessauditinginterval", value);
                this.OnPropertyChanged("UserAccessAuditingInterval");
            }
        }

        /// <summary>
        /// Indicates whether the read-optimized form should be enabled for this organization.
        /// </summary>
        public System.Nullable<bool> UseReadForm
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("usereadform");
            }
            set
            {
                this.SetAttributeValue("usereadform", value);
                this.OnPropertyChanged("UseReadForm");
            }
        }

        /// <summary>
        /// Unique identifier of the default group of users in the organization.
        /// </summary>
        public System.Nullable<System.Guid> UserGroupId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("usergroupid");
            }
            set
            {
                this.SetAttributeValue("usergroupid", value);
                this.OnPropertyChanged("UserGroupId");
            }
        }

        /// <summary>
        /// Indicates default protocol selected for organization.
        /// </summary>
        public System.Nullable<bool> UseSkypeProtocol
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("useskypeprotocol");
            }
            set
            {
                this.SetAttributeValue("useskypeprotocol", value);
                this.OnPropertyChanged("UseSkypeProtocol");
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        public System.Nullable<int> UTCConversionTimeZoneCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }
            set
            {
                this.SetAttributeValue("utcconversiontimezonecode", value);
                this.OnPropertyChanged("UTCConversionTimeZoneCode");
            }
        }

        /// <summary>
        /// Hash of the V3 callout configuration file.
        /// </summary>
        public string V3CalloutConfigHash
        {
            get
            {
                return this.GetAttributeValue<string>("v3calloutconfighash");
            }
        }

        /// <summary>
        /// Version number of the organization.
        /// </summary>
        public System.Nullable<long> VersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// Hash value of web resources.
        /// </summary>
        public string WebResourceHash
        {
            get
            {
                return this.GetAttributeValue<string>("webresourcehash");
            }
            set
            {
                this.SetAttributeValue("webresourcehash", value);
                this.OnPropertyChanged("WebResourceHash");
            }
        }

        /// <summary>
        /// Designated first day of the week throughout Microsoft Dynamics CRM.
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue WeekStartDayCode
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("weekstartdaycode");
            }
            set
            {
                this.SetAttributeValue("weekstartdaycode", value);
                this.OnPropertyChanged("WeekStartDayCode");
            }
        }

        /// <summary>
        /// For Internal use only.
        /// </summary>
        public string WidgetProperties
        {
            get
            {
                return this.GetAttributeValue<string>("widgetproperties");
            }
            set
            {
                this.SetAttributeValue("widgetproperties", value);
                this.OnPropertyChanged("WidgetProperties");
            }
        }

        /// <summary>
        /// Denotes the Yammer group ID
        /// </summary>
        public System.Nullable<int> YammerGroupId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("yammergroupid");
            }
            set
            {
                this.SetAttributeValue("yammergroupid", value);
                this.OnPropertyChanged("YammerGroupId");
            }
        }

        /// <summary>
        /// Denotes the Yammer network permalink
        /// </summary>
        public string YammerNetworkPermalink
        {
            get
            {
                return this.GetAttributeValue<string>("yammernetworkpermalink");
            }
            set
            {
                this.SetAttributeValue("yammernetworkpermalink", value);
                this.OnPropertyChanged("YammerNetworkPermalink");
            }
        }

        /// <summary>
        /// Denotes whether the OAuth access token for Yammer network has expired
        /// </summary>
        public System.Nullable<bool> YammerOAuthAccessTokenExpired
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("yammeroauthaccesstokenexpired");
            }
            set
            {
                this.SetAttributeValue("yammeroauthaccesstokenexpired", value);
                this.OnPropertyChanged("YammerOAuthAccessTokenExpired");
            }
        }

        /// <summary>
        /// Internal Use Only
        /// </summary>
        public Microsoft.Xrm.Sdk.Samples.OptionSetValue YammerPostMethod
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Samples.OptionSetValue>("yammerpostmethod");
            }
            set
            {
                this.SetAttributeValue("yammerpostmethod", value);
                this.OnPropertyChanged("YammerPostMethod");
            }
        }

        /// <summary>
        /// Information that specifies how the first week of the year is specified in Microsoft Dynamics CRM.
        /// </summary>
        public System.Nullable<int> YearStartWeekCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("yearstartweekcode");
            }
            set
            {
                this.SetAttributeValue("yearstartweekcode", value);
                this.OnPropertyChanged("YearStartWeekCode");
            }
        }

        /// <summary>
        /// 1:N organization_msdyn_expensecategory
        /// </summary>
        public System.Collections.Generic.IEnumerable<Common.Model.msdyn_expensecategory> organization_msdyn_expensecategory
        {
            get
            {
                return this.GetRelatedEntities<Common.Model.msdyn_expensecategory>("organization_msdyn_expensecategory", null);
            }
            set
            {
                this.SetRelatedEntities<Common.Model.msdyn_expensecategory>("organization_msdyn_expensecategory", null, value);
                this.OnPropertyChanged("organization_msdyn_expensecategory");
            }
        }

        /// <summary>
        /// 1:N organization_msdyn_transactioncategory
        /// </summary>
        public System.Collections.Generic.IEnumerable<Common.Model.msdyn_transactioncategory> organization_msdyn_transactioncategory
        {
            get
            {
                return this.GetRelatedEntities<Common.Model.msdyn_transactioncategory>("organization_msdyn_transactioncategory", null);
            }
            set
            {
                this.SetRelatedEntities<Common.Model.msdyn_transactioncategory>("organization_msdyn_transactioncategory", null, value);
                this.OnPropertyChanged("organization_msdyn_transactioncategory");
            }
        }

        /// <summary>
        /// 1:N organization_msdyn_transactioncategoryhierarchyelement
        /// </summary>
        public System.Collections.Generic.IEnumerable<Common.Model.msdyn_transactioncategoryhierarchyelement> organization_msdyn_transactioncategoryhierarchyelement
        {
            get
            {
                return this.GetRelatedEntities<Common.Model.msdyn_transactioncategoryhierarchyelement>("organization_msdyn_transactioncategoryhierarchyelement", null);
            }
            set
            {
                this.SetRelatedEntities<Common.Model.msdyn_transactioncategoryhierarchyelement>("organization_msdyn_transactioncategoryhierarchyelement", null, value);
                this.OnPropertyChanged("organization_msdyn_transactioncategoryhierarchyelement");
            }
        }

        /// <summary>
        /// 1:N organization_system_users
        /// </summary>
        public System.Collections.Generic.IEnumerable<Common.Model.SystemUser> organization_system_users
        {
            get
            {
                return this.GetRelatedEntities<Common.Model.SystemUser>("organization_system_users", null);
            }
            set
            {
                this.SetRelatedEntities<Common.Model.SystemUser>("organization_system_users", null, value);
                this.OnPropertyChanged("organization_system_users");
            }
        }

        /// <summary>
        /// 1:N organization_transactioncurrencies
        /// </summary>
        public System.Collections.Generic.IEnumerable<Common.Model.TransactionCurrency> organization_transactioncurrencies
        {
            get
            {
                return this.GetRelatedEntities<Common.Model.TransactionCurrency>("organization_transactioncurrencies", null);
            }
            set
            {
                this.SetRelatedEntities<Common.Model.TransactionCurrency>("organization_transactioncurrencies", null, value);
                this.OnPropertyChanged("organization_transactioncurrencies");
            }
        }

        /// <summary>
        /// N:1 basecurrency_organization
        /// </summary>
        public Common.Model.TransactionCurrency basecurrency_organization
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.TransactionCurrency>("basecurrency_organization", null);
            }
            set
            {
                this.SetRelatedEntity<Common.Model.TransactionCurrency>("basecurrency_organization", null, value);
                this.OnPropertyChanged("basecurrency_organization");
            }
        }

        /// <summary>
        /// N:1 lk_organization_createdonbehalfby
        /// </summary>
        public Common.Model.SystemUser lk_organization_createdonbehalfby
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.SystemUser>("lk_organization_createdonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 lk_organization_modifiedonbehalfby
        /// </summary>
        public Common.Model.SystemUser lk_organization_modifiedonbehalfby
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.SystemUser>("lk_organization_modifiedonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 lk_organizationbase_createdby
        /// </summary>
        public Common.Model.SystemUser lk_organizationbase_createdby
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.SystemUser>("lk_organizationbase_createdby", null);
            }
        }

        /// <summary>
        /// N:1 lk_organizationbase_modifiedby
        /// </summary>
        public Common.Model.SystemUser lk_organizationbase_modifiedby
        {
            get
            {
                return this.GetRelatedEntity<Common.Model.SystemUser>("lk_organizationbase_modifiedby", null);
            }
        }
    }
}